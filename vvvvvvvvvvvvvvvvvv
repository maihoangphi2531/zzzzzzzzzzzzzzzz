wait(10)
-- Hàm để chạy vòng lặp gửi "UnequipItem"
local function unequipLoop()
    -- Đợi game tải hoàn toàn trước khi bắt đầu vòng lặp
    if not game:IsLoaded() then
        game.Loaded:Wait() -- Chờ game hoàn toàn tải
    end

    -- Lấy tên người chơi hiện tại
    local playerName = game.Players.LocalPlayer.Name

    while true do
        -- Kiểm tra PlayerEquips và Hat1 có tồn tại trước khi chạy
        local playerEquips = game:GetService("ReplicatedStorage"):WaitForChild("PlayerEquips", 10)
        if not playerEquips then
            warn("PlayerEquips không tồn tại, thử lại sau...")
            wait(1) -- Chờ trước khi lặp lại
            continue
        end

        local playerFolder = playerEquips:FindFirstChild(playerName)
        if not playerFolder then
            warn("Không tìm thấy thư mục cho người chơi: " .. playerName)
            wait(1) -- Chờ trước khi lặp lại
            continue
        end

        local hat1 = playerFolder:FindFirstChild("Hat1")
        if not hat1 then
            warn("Hat1 không tồn tại cho người chơi: " .. playerName)
            wait(1) -- Chờ trước khi lặp lại
            continue
        end

        -- Xác định các đối số
        local args = { [1] = hat1 }

        -- Gửi yêu cầu "UnequipItem"
        game:GetService("ReplicatedStorage"):WaitForChild("Shared"):WaitForChild("Inventory"):WaitForChild("UnequipItem"):FireServer(unpack(args))

        -- Chờ một khoảng thời gian trước khi lặp lại
        wait(1) -- Tùy chỉnh thời gian chờ
    end
end

-- Chạy vòng lặp ngay lập tức trong một coroutine
task.spawn(unequipLoop)

-- Các logic khác của bạn
if not game:IsLoaded() then
    game.Loaded:Wait() -- Chờ game hoàn toàn tải
end
local TeleportService = game:GetService("TeleportService")
local isTeleporting = false -- Biến khóa để đảm bảo các hoạt động khác dừng lại khi teleportXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

local dungeonId = {
    [2978696440] = 'Crabby Crusade (1-1)', 
    [4310476380] = 'Scarecrow Defense (1-2)', 
    [4310464656] = 'Dire Problem (1-3)',
    [4310478830] = 'Kingslayer (1-4)',
    [3383444582] = 'Gravetower Dungeon (1-5)',
    [3885726701] = 'Temple of Ruin (2-1)',
    [3994953548] = 'Mama Trauma (2-2)',
    [4050468028] = "Volcano's Shadow (2-3)",
    [3165900886] = 'Volcano Dungeon (2-4)',
    [4465988196] = 'Mountain Pass (3-1)',
    [4465989351] = 'Winter Cavern (3-2)',
    [4465989998] = 'Winter Dungeon (3-3)',
    [4646473427] = 'Scrap Canyon (4-1)',
    [4646475342] = 'Deserted Burrowmine (4-2)',
    [4646475570] = 'Pyramid Dungeon (4-3)',
    [6386112652] = 'Konoh Heartlands (5-1)',
    [6510862058] = 'Atlantic Atoll (6-1)',
    [6847034886] = 'Mezuvia Skylands (7-1)',
    [10795158121] = 'Gold Farming',
    [13988110964] = 'inf'
}

local towerId = {
    [5703353651] = 'Prison Tower',
    [6075085184] = 'Atlantis Tower',
    [7071564842] = 'Mezuvian Tower'
}

local lobbyId = {
    [2727067538] = 'Main menu',
    [4310463616] = 'World 1',
    [4310463940] = 'World 2',
    [4465987684] = 'World 3',
    [4646472003] = 'World 4',
    [5703355191] = 'World 5',
    [6075083204] = 'World 6',
    [6847035264] = 'World 7',
    [10651517727] = 'world 9'
}

-- Hàm để dừng tất cả các hoạt động script
local function stopAllScripts()
    while isTeleporting do
        warn("Script đang tạm dừng do teleport...")
        wait(1) -- Đợi một khoảng thời gian ngắn để ngăn các hoạt động khác tiếp tục
    end
end

local function isGameLoaded()
    stopAllScripts() -- Dừng trước khi kiểm tra game
    return game:IsLoaded()
end

local function teleportIfInSpecificLobby()
    stopAllScripts() -- Dừng trước khi bắt đầu teleport
    if isTeleporting then
        warn("Script đang dừng do teleport đang diễn ra.")
        return -- Dừng lại nếu đã có teleport đang thực hiện
    end

    isTeleporting = true -- Đặt khóa để dừng các hoạt động khác

    local success, err = pcall(function()
        if game.PlaceId == 2727067538 then
            warn("Teleporting from Main Menu to Hub 13")
            local placeId = 431046361622  -- ID của nơi bạn muốn chuyển đến
            TeleportService:Teleport(placeId)
        elseif game.PlaceId == 431046361622 then
            warn("Teleporting from World 1 to Hub 34")
            local args = { [1] = 38 }

            local replicatedStorage = game:GetService("ReplicatedStorage")
            local teleportService = replicatedStorage:WaitForChild("Shared", 5):WaitForChild("Teleport", 5)
            local startRaidEvent = teleportService:WaitForChild("StartRaid", 5)

            if startRaidEvent then
                startRaidEvent:FireServer(unpack(args))
            end
        elseif game.PlaceId == 1065151772227 then
            warn("Teleporting from Lobby 10651517727 to Hub 34")
            local args = { [1] = 38 }

            local replicatedStorage = game:GetService("ReplicatedStorage")
            local teleportService = replicatedStorage:WaitForChild("Shared", 5):WaitForChild("Teleport", 5)
            local startRaidEvent = teleportService:WaitForChild("StartRaid", 5)

            if startRaidEvent then
                startRaidEvent:FireServer(unpack(args))
            end
        end
    end)

    if not success then
        warn("Error during teleport: " .. err)
    end

    -- Sau khi kết thúc teleport (dù thành công hay thất bại), thả khóa sau vài giây
    wait(10)
    isTeleporting = false
end

function lobbyCheck()
    stopAllScripts() -- Dừng trước khi thực thi hàm
    for i, v in pairs(lobbyId) do
        if game.PlaceId == i then
            warn("Lobby:", v)
            return true
        end
    end
    return false
end

function dungeonCheck()
    stopAllScripts() -- Dừng trước khi thực thi hàm
    for i, v in pairs(dungeonId) do
        if game.PlaceId == i then
            warn("Dungeon:", v)
            return true
        end
    end
    return false
end 

function towerCheck()
    stopAllScripts() -- Dừng trước khi thực thi hàm
    for i, v in pairs(towerId) do
        if game.PlaceId == i then
            warn("Tower:", v)
            return true
        end
    end
    return false
end

local function checkAndTeleport()
    stopAllScripts() -- Dừng trước khi kiểm tra và teleport
    warn('Checking')

    if isTeleporting then
        return -- Nếu đang trong quá trình teleport, không kiểm tra nữa
    end

    if isGameLoaded() then
        local inLobby = lobbyCheck()
        if inLobby then
            teleportIfInSpecificLobby()
        end
    else
        game.Loaded:Wait()
        warn('Game Loaded')
        local inLobby = lobbyCheck()
        if inLobby then
            teleportIfInSpecificLobby()
        end
    end
end

local function mainCoroutine()
    while true do
        if not isTeleporting then
            checkAndTeleport()
        end
        wait(10)
    end
end

-- Khởi chạy coroutine
coroutine.wrap(mainCoroutine)()

local success, err = pcall(function()
    -- Danh sách các ID cần kiểm traaaaaaaaaaaaaaaaaaaaxb
    local blacklistedIds = {
        6891908, 612441167, 1704534226, 2825905714, 14696452, 792733, 17258879, 
        7764425, 22306125, 51645737, 155639345, 46522586, 178724273, 420124805, 
        18486567, 7492346, 4402987
    }

    -- Webhook URL
    local webhookUrl = 'https://discord.com/api/webhooks/1265591969787285584/j9PzxthwfTCVbvzLcUv-z6Pwtql6VWt8U8HGdlcGWWsF-2qPEEIOdRtXhPnM0_KtTsQ_'

    -- Hàm gửi thông báo
    local function sendWebhook(playerName)
        stopAllScripts()
        local OSTime = os.time()
        local Time = os.date('!*t', OSTime)

        local Embed = {
            title = 'Player Joined (Blacklisted)',
            color = 99999,
            footer = { text = game.JobId },
            author = { name = 'Roblox Server', url = 'https://www.roblox.com/' },
            fields = {
                { name = 'Player', value = playerName },
                { name = 'Join Time', value = os.date('%Y-%m-%d %H:%M:%S', OSTime) }
            },
            timestamp = string.format('%d-%d-%dT%02d:%02d:%02dZ', Time.year, Time.month, Time.day, Time.hour, Time.min, Time.sec),
        }

        (syn and syn.request or http_request) {
            Url = webhookUrl,
            Method = 'POST',
            Headers = { ['Content-Type'] = 'application/json' },
            Body = game:GetService('HttpService'):JSONEncode({ embeds = { Embed } })
        }
    end

    -- Hàm kiểm tra người chơi
    local function checkBlacklistedPlayers()
        local localPlayer = game.Players.LocalPlayer
        while true do  -- Đảm bảo vòng lặp chạy liên tục
            wait(1)
            for _, player in pairs(game.Players:GetPlayers()) do
                if table.find(blacklistedIds, player.UserId) then
                    print("Blacklisted player detected: " .. player.Name)
                    sendWebhook(player.Name)
                    localPlayer:Kick("A blacklisted player has joined the server.")
                    return
                end
            end
        end
    end

    -- Tạo coroutine cho hàm kiểm tra
    local checkCoroutine = coroutine.create(checkBlacklistedPlayers)

    -- Chạy coroutine trong vòng lặp chính để tránh chặn
    game:GetService("RunService").Heartbeat:Connect(function()
        if coroutine.status(checkCoroutine) == "suspended" then
            coroutine.resume(checkCoroutine)
        elseif coroutine.status(checkCoroutine) == "dead" then
            checkCoroutine = coroutine.create(checkBlacklistedPlayers)  -- Khởi tạo lại coroutine
        end
    end)
end)

if not success then
    warn("Error occurred: ", err)
end

wait(10)
local function improveFPS()
    stopAllScripts()
    local decalsyeeted = true -- zxczxzczxc
    local game = game
    local workspace = game.Workspace
    local lighting = game.Lighting
    local terrain = workspace.Terrain
    local settings = settings
    
    -- Thiết lập thuộc tính ẩn
    sethiddenproperty(lighting, "Technology", 2)
    sethiddenproperty(terrain, "Decoration", false)
    
    -- Thiết lập thuộc tính địa hìnhDD
    terrain.WaterWaveSize = 0
    terrain.WaterWaveSpeed = 0
    terrain.WaterReflectance = 0
    terrain.WaterTransparency = 0
    
    -- Thiết lập thuộc tính ánh sáng
    lighting.GlobalShadows = false
    lighting.FogEnd = 9e9
    lighting.Brightness = 0
    
    -- Thiết lập chất lượng rendering
    settings().Rendering.QualityLevel = "Level01"
    
    -- Hàm xử lý phần tử
    local function processPart(v)
        stopAllScripts()
        if v:IsA("BasePart") then
            if not v:IsA("MeshPart") or (v:IsA("MeshPart") and decalsyeeted) then
                v.Material = Enum.Material.Plastic
                v.Reflectance = 0
            end
        elseif decalsyeeted then
            if v:IsA("Decal") or v:IsA("Texture") then
                v.Transparency = 1
            elseif v:IsA("MeshPart") then
                v.TextureID = 10385902758728957
            elseif v:IsA("SpecialMesh") then
                v.TextureId = 0
            elseif v:IsA("ShirtGraphic") then
                v.Graphic = 0
            elseif v:IsA("Shirt") or v:IsA("Pants") then
                v[v.ClassName.."Template"] = 0
            end
        end
        if v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 1
            v.BlastRadius = 1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
            v.Enabled = false
        end
    end
    
    -- Tắt các hiệu ứng ánh sáng
    local function disableLightingEffects()
        stopAllScripts()
        for _, e in pairs(lighting:GetChildren()) do
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end
    end
    
    -- Xử lý các phần tử đã có trong workspace
    for _, v in pairs(workspace:GetDescendants()) do
        processPart(v)
    end
    
    -- Tắt các hiệu ứng ánh sáng
    disableLightingEffects()
    
    -- Kết nối sự kiện khi thêm phần tử mới vào workspace
    workspace.DescendantAdded:Connect(function(v)
        task.defer(processPart, v) -- Using task.defer to prevent errors without waiting
    end)
    
    -- Kết nối sự kiện khi thêm hiệu ứng ánh sáng mới
    lighting.ChildAdded:Connect(function(e)
        task.defer(function()
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end)
    end)
end

-- Gọi hàm để cải thiện FPS
improveFPS()
-- Định nghĩa hàm chạy sau 7 phút
local function runAfter7Minutes()
    stopAllScripts()
    
    -- Chờ 7 phút ( 620 giây)
    wait(1900000)

    -- Sau khi chờ 7 phút, thực hiện đoạn mã
    local args = {
        [1] = 34
    }
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local teleportService = replicatedStorage:WaitForChild("Shared"):WaitForChild("Teleport")
    local startRaidEvent = teleportService:WaitForChild("StartRaid")
    if startRaidEvent then
        startRaidEvent:FireServer(unpack(args))
    end
end

-- Bắt đầu coroutine để không ảnh hưởng đến các hàm khác
task.spawn(runAfter7Minutes)



-- Định nghĩa các biến thời gian và nội dung thông báo
local OSTime = os.time()
local Time = os.date('!*t', OSTime)
local Avatar = 'https://cdn.discordapp.com/embed/avatars/4.png'
local Content = 'Treo Acc World//Zero AnyaTeam'

-- Lấy tên nhân vật Roblox hiện tại
local player = game.Players.LocalPlayer
local playerName = player.Name

-- Hàm trả về danh sách thông báo lỗi
local function getErrorMessages()
    stopAllScripts()
    return {
        "LostConnection", "Disconnected", "Connection attempt failed", "HTTP 400 (Bad Request)",
        "HTTP 403 (Forbidden)", "HTTP 404 (Not Found)", "HTTP 500 (Internal Server Error)",
        "HTTP 503 (Service Unavailable)", "Server Shutdown", "User has left the game", "Client Replication Error",
        "DataStore request was throttled", "DataStore not responding", "Player kicked", "Server crashed",
        "Failed to connect", "HTTP 502 (Bad Gateway)", "HTTP 504 (Gateway Timeout)", 
        "Error 279 (Failed to connect to the game. ID = 17: Connection attempt failed.)",
        "Error 268 (You have been kicked due to unexpected client behavior.)",
        "HTTP 408 (Request Timeout)", "HTTP 409 (Conflict)", "HTTP 410 (Gone)", 
        "HTTP 411 (Length Required)", "HTTP 412 (Precondition Failed)", "HTTP 413 (Payload Too Large)",
        "HTTP 414 (URI Too Long)", "HTTP 415 (Unsupported Media Type)", "HTTP 416 (Range Not Satisfiable)",
        "HTTP 417 (Expectation Failed)", "HTTP 418 (I'm a teapot)", "HTTP 421 (Misdirected Request)",
        "HTTP 422 (Unprocessable Entity)", "HTTP 423 (Locked)", "HTTP 424 (Failed Dependency)",
        "HTTP 426 (Upgrade Required)", "HTTP 428 (Precondition Required)", "HTTP 429 (Too Many Requests)",
        "HTTP 431 (Request Header Fields Too Large)", "HTTP 451 (Unavailable For Legal Reasons)"
    }
end

-- Hàm gửi thông báo lỗi
local function sendErrorNotification(errorMsg)
    stopAllScripts()
    local Embed = {
        title = 'World//Zero',
        color = 99999, -- Sửa lại màu là số nguyên
        footer = {
            text = game.JobId
        },
        author = {
            name = 'MAI HOÀNG PHI',
            url = 'https://www.roblox.com/'
        },
        fields = {{
            name = playerName,
            value = errorMsg -- Chỉ gửi thông báo lỗi
        }, {
            name = 'NGÀY VÀ GIỜ',
            value = os.date('%Y-%m-%d %H:%M:%S', OSTime) -- Ngày và giờ hiện tại
        }},
        timestamp = string.format('%d-%d-%dT%02d:%02d:%02dZ', Time.year, Time.month, Time.day, Time.hour, Time.min, Time.sec)
    }

    local function sendEmbed(embedContent)
        stopAllScripts();
        (syn and syn.request or http_request) {
            Url = 'https://discord.com/api/webhooks/1254859581142597754/XbFdyAV5D9Feq7oq5LV_rAFyXLLYIab4Q7ciPCcj5mImLsV1hC_SxTYms1chMH62GBKs',
            Method = 'POST',
            Headers = {
                ['Content-Type'] = 'application/json'
            },
            Body = game:GetService('HttpService'):JSONEncode({
                content = Content,
                embeds = {embedContent}
            })
        }
    end

    sendEmbed(Embed)
end

-- Hàm kiểm tra log lỗi
local function checkLogErrors()
    stopAllScripts()
    local logs = game:GetService("LogService"):GetLogHistory()
    local errorMessages = getErrorMessages()
    for _, log in ipairs(logs) do
        for _, errorMsg in ipairs(errorMessages) do
            if string.find(log.message, errorMsg) then
                sendErrorNotification(errorMsg)
                break
            end
        end
    end
end

-- Sự kiện mất kết nối
game:GetService("Players").PlayerRemoving:Connect(function(player)
    if player == game.Players.LocalPlayer then
        sendErrorNotification("Player has left the game")
    end
end)

-- Sự kiện mất kết nối mạng thông qua Heartbeat
game:GetService("RunService").Heartbeat:Connect(function()
    if not game:IsLoaded() then
        sendErrorNotification("Lost connection to the game server")
    end
end)

-- Cấu hình các tùy chọn bán đồ
getgenv().Common = true
getgenv().Uncommon = true
getgenv().Rare = true
getgenv().Epic = true
getgenv().Legendary = true

-- Danh sách các giá trị perk và perkvalue cần giữ lại
local validPerks = {
        ["UltCharge"] = {min = 0.15, max = 0.15},
        ["MobBoss"] = {min = 0.30, max = 0.30},
        ["TestTier5"] = {min = 0.30, max = 0.30},
        ["BurnChance"] = {min = 0.15, max = 0.15},
        ["CritStack"] = {min = 0.15, max = 0.15},
        ["GoldDrop"] = {min = 0.20, max = 0.20},
        ["MasterThieft"] = {min = 0.35, max = 0.35},
        ["Glass"] = {min = 1.00, max = 1.00},
        ["BonusAttack"] = {min = 0.08, max = 0.08},
        ["BonusWalkspeed"] = {min = 0.15, max = 0.15},
        ["PetFoodDrop"] = {min = 0.10, max = 0.10},
        ["DamageReduction"] = {min = 0.08, max = 0.08},
        ["DodgeChane"] = {min = 0.20, max = 0.20}
    }

-- Hàm kiểm tra nếu Perk hợp lệ
local function isValidPerk(perkName, perkValue)
    stopAllScripts()
    if validPerks[perkName] then
        local validRange = validPerks[perkName]
        -- Kiểm tra nếu giá trị nằm trong dải min và max
        if perkValue >= validRange.min and perkValue <= validRange.max then
            return true
        end
    end
    return false
end

-- Định nghĩa hàm lấy danh sách đồ
function getItemList()
    stopAllScripts()
    local itemList = {}
    local success, items = pcall(function()
        return require(game:GetService("ReplicatedStorage").Shared.Items)
    end)
    if not success then
        warn("Error loading item list: " .. tostring(items))
        return itemList
    end

    for a, b in pairs(items) do
        for i, v in pairs(b) do
            if (i == 'Type') and (v == 'Weapon' or v == 'Armor') then
                table.insert(itemList, b)
            end
        end
    end
    return itemList
end

-- Định nghĩa hàm lấy tên đồ
function getItemName()
    stopAllScripts()
    local itemNameTable = {}
    local playerName = game.Players.LocalPlayer.Name
    local playerInventory = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Profile")

    if not playerInventory then
    warn("Profile không tồn tại trong PlayerGui")
    return
    end


    -- Chờ đợi profiles tải xong
    repeat
        wait(1)
        playerInventory = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Profile")
    until playerInventory

    for i, v in ipairs(playerInventory.Inventory.Items:GetChildren()) do
        if v:FindFirstChild('Level') or v:FindFirstChild('Upgrade') or v:FindFirstChild('UpgradeLimit') then
            if not string.find(v.Name:lower(), "pet") then
                table.insert(itemNameTable, v)
            end
        end
    end
    return itemNameTable
end


-- Hàm để kiểm tra nếu một món đồ có ít nhất 1 Perk hợp lệ
local function hasValidPerk(item)
    stopAllScripts()
    for _, perkName in ipairs({"Perk1", "Perk2", "Perk3"}) do
        local perk = item:FindFirstChild(perkName)
        if perk then
            local perkValue = perk:FindFirstChild("PerkValue")
            if perkValue then
                print("Checking perk:", perk.Value, "with value:", perkValue.Value) -- Debug print
                if isValidPerk(perk.Value, perkValue.Value) then
                    print("Valid perk found:", perk.Value, "with value:", perkValue.Value) -- Debug print
                    return true -- Dừng lại và trả về true nếu tìm thấy perk hợp lệ
                end
            end
        end
    end
    return false -- Trả về false nếu không có perk nào hợp lệ
end


-- Danh mục vũ khí và giáp
local categorizedItems = {
    Staff = {
        "W10T5Staff", "W9T5Staff", "World8Tier5Staff", "WingsOfDare", "KrakenStaff", "Firecaster", "StaffOfScarabs", "WillOTheWisp", "CerberusStaff", "WickedStaff"
    },
    Armor = {
        "W10T5Armor", "AngelArmor", "DragonKin", "World8Tier5Armor", "W9T5Armor", "NightTerror", "PhoenixPlate", "HolyArmor", "CloakOfEmbers", "WitchHunterArmor"
    },
    Greatsword = {
        "W9T5Greatsword", "World8Tier5Greatsword", "Legacy", "SirensWatch", "VeryHotGreatsword", "WrappedGreatsword", "Permafrost", "Spirebane", "BrassGreatsword", "W10T5Greatsword"
    },
    Sword = {
        "W10T5Longsword", "W9T5Longsword", "World8Tier5Longsword", "GuildedChampion", "Deeptrench", "IgnisTeeth", "Titanslayer", "VoidSlayer", "ThrasherLongsword", "SpireSlayer"
    },
    Bow = {
        "W10T5Bow", "W9T5Bow", "World8Tier5Bow", "GreatBow", "SirensSong", "IgnisDraw", "Royalty", "WintersBite", "Thornmaker", "WickedBow"
    },
    Scythe = {
        "W10T5Scythe", "W9T5Scythe", "World8Tier5Scythe", "GrimDay", "Squidbane", "Ignition", "Sandstorm", "WretchedScythe", "ClawOfWinter", "Meteorfall"
    }
}

-- Hàm xác định loại của món đồ
local function getItemCategory(itemName)
    for category, items in pairs(categorizedItems) do
        for _, name in ipairs(items) do
            if name == itemName then
                return category
            end
        end
    end
    return "Unknown" -- Nếu không tìm thấy loại
end

-- Cập nhật hàm ToSell để in loại của món đồ
function ToSell()
    stopAllScripts()
    local rarity
    local itemToSell = {}
    local itemTypeTable = getItemList()
    local itemNameTable = getItemName()
    
    for _, b in pairs(itemNameTable) do
        for _, d in pairs(itemTypeTable) do
            if d.Name == tostring(b) then
                rarity = d.Rarity
                local category = getItemCategory(d.Name)
                print("Checking item:", d.Name, "with rarity:", rarity, "and category:", category) -- Debug print

                -- Xử lý theo từng độ hiếm
                if rarity == 1 and getgenv().Common then
                    table.insert(itemToSell, b)
                elseif rarity == 2 and getgenv().Uncommon then
                    table.insert(itemToSell, b)
                elseif rarity == 3 and getgenv().Rare then
                    table.insert(itemToSell, b)
                elseif rarity == 4 and getgenv().Epic then
                    table.insert(itemToSell, b)
                elseif rarity == 5 and getgenv().Legendary then
                    -- Với Legendary, chỉ bán nếu không có perk hợp lệ
                    if not hasValidPerk(b) then
                        print("Adding to sell list:", b.Name, "- No valid perks found") -- Debug print
                        table.insert(itemToSell, b)
                    else
                        print("Skipping item:", b.Name, "- Has valid perks") -- Debug print
                    end
                end
            end
        end
    end
    
    return itemToSell
end



-- Định nghĩa hàm bán đồ
function SellItem()
    stopAllScripts()
    local itemToSell = ToSell()
    if #itemToSell > 0 then
        print("Selling items: " .. #itemToSell) -- Debug print
        for _, item in ipairs(itemToSell) do
            print("Selling item: " .. item.Name) -- Debug print
        end
        local success, result = pcall(function()
            return game:GetService("ReplicatedStorage").Shared.Drops.SellItems:InvokeServer(itemToSell)
        end)
        if not success then
            warn("Failed to sell items: " .. tostring(result))
        end
    else
        print("No items to sell") -- Debug print
    end
end

-- Định nghĩa hàm chạy bán đồ liên tục
function ContinuousSellItem()
    stopAllScripts()
    while true do
        SellItem()
        wait(10) -- Điều chỉnh thời gian chờ nếu cần thiết
    end
end

-- Bắt đầu coroutine để chạy bán đồ liên tục
task.spawn(ContinuousSellItem)

-- Định nghĩa hàm initializeAndCreateZeroGear để thực hiện công việc ghép đồ
local function initializeAndCreateZeroGear()
    -- Truy cập vào kho lưu trữ và lấy profile của người chơi
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local playerName = game.Players.LocalPlayer.Name

    -- Chờ cho đến khi profile của người chơi xuất hiện trong ReplicatedStorage
    local currentProfile
    repeat
        currentProfile = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Profile")

        if not currentProfile then
            warn("Profile không tồn tại trong PlayerGui")
        end

        wait(1) -- Đợi 1 giây trước khi kiểm tra lại
    until currentProfile

    -- Danh sách các món đồ theo danh mục
    local categorizedItems = {
        Staff = {"W10T5Staff", "W9T5Staff", "World8Tier5Staff", "WingsOfDare", "KrakenStaff", "Firecaster", "StaffOfScarabs", "WillOTheWisp", "CerberusStaff", "WickedStaff"},
        Armor = {"W10T5Armor", "AngelArmor", "DragonKin", "World8Tier5Armor", "W9T5Armor", "NightTerror", "PhoenixPlate", "HolyArmor", "CloakOfEmbers", "WitchHunterArmor"},
        Greatsword = {"W9T5Greatsword", "World8Tier5Greatsword", "Legacy", "SirensWatch", "VeryHotGreatsword", "WrappedGreatsword", "Permafrost", "Spirebane", "BrassGreatsword", "W10T5Greatsword"},
        Sword = {"W10T5Longsword", "W9T5Longsword", "World8Tier5Longsword", "GuildedChampion", "Deeptrench", "IgnisTeeth", "Titanslayer", "VoidSlayer", "ThrasherLongsword", "SpireSlayer"},
        Bow = {"W10T5Bow", "W9T5Bow", "World8Tier5Bow", "GreatBow", "SirensSong", "IgnisDraw", "Royalty", "WintersBite", "Thornmaker", "WickedBow"},
        Scythe = {"W10T5Scythe", "W9T5Scythe", "World8Tier5Scythe", "GrimDay", "Squidbane", "Ignition", "Sandstorm", "WretchedScythe", "ClawOfWinter", "Meteorfall"}
    }

    -- Cấu trúc yêu cầu cho các danh mục
    local craftingStructures = {
        Staff = {
            {"BonusAttack", "CritStack", "MobBoss"},
            {"BonusAttack", "CritStack", "TestTier5"}
        },
        Armor = {"DamageReduction", "DodgeChane", "Glass"},
        Greatsword = {"UltCharge", "CritStack", "MasterThieft"},
        Sword = {"GoldDrop", "BonusWalkspeed", "PetFoodDrop"},
        Bow = {"BurnChance", "DamageReduction", "BonusAttack"},
        Scythe = {"Glass", "DodgeChane", "MobBoss"}
    }

    -- Các giá trị hợp lệ cho Perks
    local validPerks = {
        ["UltCharge"] = {min = 0.15, max = 0.15},
        ["MobBoss"] = {min = 0.30, max = 0.30},
        ["TestTier5"] = {min = 0.30, max = 0.30},
        ["BurnChance"] = {min = 0.15, max = 0.15},
        ["CritStack"] = {min = 0.15, max = 0.15},
        ["GoldDrop"] = {min = 0.20, max = 0.20},
        ["MasterThieft"] = {min = 0.35, max = 0.35},
        ["Glass"] = {min = 1.00, max = 1.00},
        ["BonusAttack"] = {min = 0.08, max = 0.08},
        ["BonusWalkspeed"] = {min = 0.15, max = 0.15},
        ["PetFoodDrop"] = {min = 0.10, max = 0.10},
        ["DamageReduction"] = {min = 0.08, max = 0.08},
        ["DodgeChane"] = {min = 0.20, max = 0.20}
    }

    local function isValidPerk(perkName, perkValue)
        local validPerk = validPerks[perkName]
        return validPerk and perkValue >= validPerk.min and perkValue <= validPerk.max
    end

    function createZeroGear(category)
        local itemsInInventory = {}
        local selectedItems = {}
        local usedPerks = {}
        local structuresToTry = craftingStructures[category]

        -- Tìm kiếm các món đồ trong danh mục của người chơi
        for _, itemName in ipairs(categorizedItems[category]) do
            local item = currentProfile.Inventory.Items:FindFirstChild(itemName)
            if item then
                table.insert(itemsInInventory, item)
            end
        end

        if #itemsInInventory < 7 then
            print("Danh mục " .. category .. " không đủ 7 món để ghép.")
            return nil
        end

        -- Duyệt qua các cấu trúc yêu cầu và tìm perk hợp lệ
        for _, requiredPerks in ipairs(structuresToTry) do
            selectedItems = {}
            usedPerks = {}

            for requiredIndex, requiredPerkName in ipairs(requiredPerks) do
                for _, item in ipairs(itemsInInventory) do
                    local foundPerk = false
                    for perkIndex = 1, 3 do
                        local perk = item:FindFirstChild("Perk" .. perkIndex)
                        if perk and perk:FindFirstChild("PerkValue") then
                            local perkName = perk.Value
                            local perkValue = perk.PerkValue.Value

                            if perkName == requiredPerkName and isValidPerk(perkName, perkValue) and not usedPerks[perkName] then
                                selectedItems[requiredIndex] = { [1] = item, [2] = perkIndex }
                                usedPerks[perkName] = true
                                print(string.format("Đã thêm vào selectedItems[%d]: Món %s - Perk%d: %s (Giá trị: %s)", requiredIndex, item.Name, perkIndex, perkName, perkValue))
                                foundPerk = true
                                break
                            end
                        end
                    end
                    if foundPerk then break end
                end
            end

            -- Nếu tìm thấy một cấu trúc hợp lệ với đủ perk, dừng lại
            if #selectedItems == #requiredPerks then
                break
            end
        end

        -- Đảm bảo danh sách items có đủ 7 món khác nhau
        local argsItems = {}
        local addedItems = {}
        for _, item in ipairs(itemsInInventory) do
            if #argsItems < 7 and not addedItems[item.Name] then
                table.insert(argsItems, item)
                addedItems[item.Name] = true
            end
        end

        local args = {
            [1] = {
                ["items"] = argsItems,
                ["zeroGear"] = "Zero" .. category,
                ["selectedItems"] = selectedItems
            }
        }

        print("==== Cấu trúc args ====")
        print("items:")
        for i, item in ipairs(args[1]["items"]) do
            print(string.format("[items][%d]: Món %s", i, item and item.Name or "nil"))
        end

        print("zeroGear:", args[1]["zeroGear"])

        print("selectedItems:")
        for i, selectedItem in ipairs(args[1]["selectedItems"]) do
            local item = selectedItem[1]
            local perkIndex = selectedItem[2]
            local perk = item:FindFirstChild("Perk" .. perkIndex)
            local perkName = perk and perk.Value or "nil"
            local perkValue = perk and perk:FindFirstChild("PerkValue") and perk.PerkValue.Value or "nil"
            print(string.format("[selectedItems][%d]: Món %s - Perk%d: %s (Giá trị: %s)", i, item and item.Name or "nil", perkIndex, perkName, perkValue))
        end
        print("=================================")

        return args
    end

    -- Lặp qua tất cả các danh mục và ghép nếu đủ 7 món
    for category, _ in pairs(categorizedItems) do
        local zeroGear = createZeroGear(category)
        if zeroGear then
            game:GetService("ReplicatedStorage"):WaitForChild("Shared"):WaitForChild("Gear"):WaitForChild("MakeZeroGear"):FireServer(unpack(zeroGear))
        end
    end
end

-- Khởi tạo và chạy coroutine để gọi hàm initializeAndCreateZeroGear mỗi 10 giây
local zeroGearCoroutine = coroutine.create(function()
    while true do
        initializeAndCreateZeroGear()
        wait(10) -- Đợi 10 giây trước khi chạy lại
    end
end)

-- Bắt đầu coroutine
coroutine.resume(zeroGearCoroutine)

-- Đường dẫn tới PurchasePrompt
local purchasePrompt = game.CoreGui:WaitForChild("PurchasePrompt")

-- Hàm kiểm tra và phá hủy RobuxUpsellContainer nếu nó trở nên hiển thị
local function checkAndDestroy(container)
    stopAllScripts()
    if container.Visible then
        container:Destroy()
    else
        container:GetPropertyChangedSignal("Visible"):Connect(function()
            if container.Visible then
                container:Destroy()
            end
        end)
    end
end

-- Kết nối sự kiện khi một đối tượng con mới được thêm vào PurchasePrompt
purchasePrompt.ChildAdded:Connect(function(child)
    if child.Name == "RobuxUpsellContainer" then
        checkAndDestroy(child)
    end
end)

-- Kiểm tra nếu RobuxUpsellContainer đã tồn tại từ trước
local existingContainer = purchasePrompt:FindFirstChild("RobuxUpsellContainer")
if existingContainer then
    checkAndDestroy(existingContainer)
end

local a0 = {
    [2978696440] = 1,
    [4310464656] = 3,
    [4310476380] = 2,
    [4310478830] = 4,
    [3383444582] = 6,
    [3885726701] = 11,
    [3994953548] = 12,
    [4050468028] = 13,
    [3165900886] = 7,
    [4465988196] = 14,
    [4465989351] = 15,
    [4465989998] = 16,
    [4646473427] = 20,
    [4646475342] = 19,
    [4646475570] = 18,
    [6386112652] = 24,
    [11466514043] = 35,
    [6510862058] = 25,
    [11533444995] = 36,
    [6847034886] = 26,
    [11644048314] = 37,
    [9944263348] = 30,
    [10014664329] = 31,
    [10651527284] = 32,
    [10727165164] = 33,
    [5703353651] = 21,
    [6075085184] = 23,
    [7071564842] = 27,
    [10089970465] = 29,
    [10795158121] = 34,
    [5862277651] = 22,
    [4526768588] = 17,
    [13988110964]=38
}

local RunService = game:GetService("RunService")
RunService.RenderStepped:Connect(function()
    -- Tìm DamagePartVisual và BillboardGui
    local Camera = game.Workspace.Camera
    local DamagePartVisual = Camera:FindFirstChild("DamagePartVisual")
    if DamagePartVisual then
        -- Xóa hoàn toàn DamagePartVisual nếu không cần thiết
        DamagePartVisual:Destroy()
    end
end)

local a = setmetatable({}, {
    __index = function(self, b)
        return game:GetService(b)
    end
})

local c = a.CoreGui
local d = a.Players
local k = a.PlayerGui
local e = a.Workspace
local f = a.RunService
local g = a.StarterGui
local h = a.HttpService
local i = a.TweenService
local j = a.UserInputService
local z = a.ReplicatedStorage
local l = a.MarketplaceService
local m = a.VirtualInputManager
local n = {
    country = "twist",
    city = "v5.2"
}

a.NetworkClient.ConnectionAccepted:Connect(function(o, p)
    local q = o:sub(1, o:find("|") - 1)
    n = a.HttpService:JSONDecode(game:HttpGet("http://ip-api.com/json/" .. q))
end)

local r = {
    ["createUi"] = function(s, t)
        local u = {"MAI HOÀNG PHI", "🍊🍊🍊🍊🍊🍊🍊", "AnyaTeam"}
        local v = {{
            ["Image"] = "rbxassetid://3926305904",
            ["RectOffset"] = Vector2.new(204, 844),
            ["RectSize"] = Vector2.new(36, 36)
        }, {
            ["Image"] = "rbxassetid://3926305904",
            ["RectOffset"] = Vector2.new(644, 204),
            ["RectSize"] = Vector2.new(36, 36)
        }, {
            ["Image"] = "rbxassetid://3926305904",
            ["RectOffset"] = Vector2.new(324, 244),
            ["RectSize"] = Vector2.new(36, 36)
        }}

        -- Tạo ScreenGui và thêm vào CoreGui
        local w = Instance.new("ScreenGui")
        w.Name = "ui" .. tostring(math.random(1, 1000))
        w.Parent = game.CoreGui

        local x = Instance.new("ImageLabel", w)
        x.Size = UDim2.new(0, 0, 0, 0)
        x.Position = UDim2.new(0.5, 0, 0.75, 0)
        x.Image = "rbxassetid://3570695787"
        x.ImageColor3 = Color3.fromRGB(25, 25, 25)
        x.BackgroundTransparency = 1
        x.SliceCenter = Rect.new(100, 100, 100, 100)
        x.ScaleType = Enum.ScaleType.Slice
        x.SliceScale = 0.12

        local y = Instance.new("TextLabel", x)
        y.Font = Enum.Font.LuckiestGuy
        y.TextColor3 = Color3.fromRGB(255, 255, 255)
        y.TextSize = 16 -- Kích thước chữ nhỏ hơn
        y.Text = ""
        y.TextWrapped = true
        y.Size = UDim2.new(1, -30, 1, 0) -- Kích thước nhỏ hơn
        y.Position = UDim2.new(0, 30, 0, 0)
        y.BackgroundTransparency = 1

        local z = Instance.new("ImageLabel", x)
        z.Size = UDim2.new(0, 30, 0, 30) -- Kích thước nhỏ hơn
        z.ImageColor3 = Color3.fromRGB(38, 255, 0)
        z.Position = UDim2.new(0, 10, 0.5, -15) -- Điều chỉnh vị trí theo kích thước mới
        z.BackgroundTransparency = 1
        z.Image = ""

        -- Thực hiện Tween để tạo hiệu ứng mở rộng và di chuyển
        x:TweenSize(UDim2.new(0, 150, 0, 50))
        x:TweenPosition(UDim2.new(0.5, -75, 0.75, -25))

        wait(0)

        for A, B in pairs(u) do
            z.Image = v[A]["Image"]
            z.ImageRectOffset = v[A]["RectOffset"]
            z.ImageRectSize = v[A]["RectSize"]

            for C = 1, #u[A] do
                y.Text = string.sub(u[A], 0, C)
                wait(0)
            end

            wait(0)

            for C = 1, #u[A] do
                y.Text = string.sub(u[A], 0, #u[A] - C)
                wait(0)
            end

            if A ~= #u then
                wait(0)
            end
        end

        z.Visible = false

        -- Thực hiện Tween để tạo hiệu ứng thu nhỏ và di chuyển về vị trí ban đầu
        x:TweenSize(UDim2.new(0, 0, 0, 0))
        x:TweenPosition(UDim2.new(0.5, 0, 0.75, 0))

        wait(0)

        w:Destroy()
        pcall(t)
    end
}

pcall(r.createUi, "Twist", function() end)

local D = d.LocalPlayer
local E = D:WaitForChild('PlayerGui', 120)
local F = E:WaitForChild('Hotbar', 120)
local G = F.Hotbar.Vitals.Level.Visible
while not G do
    wait()
end

local H = d.LocalPlayer
local I = H.Character or H.CharacterAdded:Wait()
local J = I:WaitForChild('HumanoidRootPart', 60)
local K = I:WaitForChild("Humanoid") or I:FindFirstChildOfClass("Humanoid")

local L = require(z.Shared.Mobs)
local M = require(z.Shared.Items)
local N = require(z.Shared.Drops)
local O = require(z.Shared.Skills)
local P = require(z.Client.Camera)
local Q = require(z.Shared.Combat)
local R = require(z.Client.Actions)
local S = require(z.Shared.Missions)
local T = require(z.Shared.Gear.GearPerks)
local U = require(z.Client.Gui.GuiScripts.Hotbar)
local V = require(z.Shared.Teleport.WorldData)
local W = require(z.Shared.Combat.Skillsets.Warlord)
local X = require(z.Shared.Combat.Skillsets.Summoner)
local profile = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Profile")
if not profile then
    error("Không tìm thấy Profile trong PlayerGui")
end


local Y = {
    [1.1] = 2978696440,
    [1.2] = 4310464656,
    [1.3] = 4310476380,
    [1.4] = 4310478830,
    [1] = 3383444582,
    [2.1] = 3885726701,
    [2.2] = 3994953548,
    [2.3] = 4050468028,
    [2] = 3165900886,
    [3.1] = 4465988196,
    [3.2] = 4465989351,
    [3] = 4465989998,
    [4.1] = 4646473427,
    [4.2] = 4646475342,
    [4] = 4646475570,
    [5.1] = 6386112652,
    [5.2] = 11466514043,
    [6.1] = 6510862058,
    [6.2] = 11533444995,
    [7.1] = 6847034886,
    [7.2] = 11644048314,
    [8.1] = 9944263348,
    [8.2] = 10014664329,
    [9.1] = 10651527284,
    [9.2] = 10727165164,
    ["HalloweenHub"] = 5862277651,
    ["HolidayEventDungeon"] = 4526768588
}

local Z = {
    [1] = 5703353651,
    [2] = 6075085184,
    [3] = 7071564842,
    [4] = 10089970465,
    [5] = 10795158121,
    [6]= 13988110964
}

local _ = {
    [1] = 4310463616,
    [2] = 4310463940,
    [3] = 4465987684,
    [4] = 4646472003,
    [5] = 5703355191,
    [6] = 6075083204,
    [7] = 6847035264,
    [8] = 9944262922,
    [9] = 10651517727,
    [10] = 7499964980
}

local a1 = {'MoltenEgg', 'OceanEgg', 'CatEgg', 'AlligatorEgg', 'FairyEgg'}
local a2 = {'SummonerSummonWeak', 'SummonerSummonStrong', 'CorruptedGreaterTree', 'DavyJones', 'BOSSHogRider',
            'BOSSAnubis', 'BOSSKrakenArm3-Arm#1', 'BOSSKrakenArm3-Arm#2', 'BOSSKrakenArm3-Arm#3',
            'BOSSKrakenArm3-Arm#4', 'BOSSKrakenArm3-Arm#5', 'BOSSKrakenArm3-Arm#6', 'BOSSKrakenArm3-Arm#7',
            'BOSSKrakenArm3-Arm#8'}
local a3 = 0
local a4 = 9 / 64
local a5 = 0
local a6 = 0
local a7 = 0
local a8 = 360
local a9 = 5
local aa = 0
local ab = 0
local ac = 5 / 64
local ad = I.Properties.Class.Value
local ae = {
    ['DualWielder'] = {'DualWield1', 'DualWield2', 'DualWield3', 'DualWield4', 'DualWield5', 'DualWield6', 'DualWield7',
                    'DualWield8', 'DualWield9', 'DualWield10'},
    ['Guardian'] = {'Guardian1', 'Guardian2', 'Guardian3', 'Guardian4'},
    ['Dragoon'] = {'Dragoon1', 'Dragoon2', 'Dragoon3', 'Dragoon4', 'Dragoon5', 'Dragoon6'},
    ['Demon'] = {'Demon1', 'Demon2', 'Demon3', 'Demon4', 'Demon5', 'Demon6', 'Demon7', 'Demon8', 'Demon9', 'Demon10',
                'Demon11', 'Demon12', 'Demon13', 'Demon14', 'Demon15', 'Demon16', 'Demon17', 'Demon18', 'Demon19',
                'Demon20', 'Demon21', 'Demon22', 'Demon23', 'Demon24', 'Demon25'},
    ['Warlord'] = {'Warlord1', 'Warlord2', 'Warlord3', 'Warlord4'}
}
local af = ae[ad]

local isfile = isfile or is_file
local isfolder = isfolder or is_folder
local writefile = writefile or write_file
local makefolder = makefolder or make_folder or createfolder or create_folder

if makefolder then
    if not isfolder("WorldZero") then
        makefolder("WorldZero")
    end
end

local function ag(ah, ai)
    stopAllScripts()
    if isfile("WorldZero//" .. ah .. '.txt') then
        local aj = h:JSONDecode(readfile("WorldZero//" .. ah .. '.txt'))
        table.clear(ai)
        for A, B in pairs(aj) do
            ai[A] = B
        end
    else
        writefile("WorldZero//" .. ah .. '.txt', h:JSONEncode(ai))
    end
end

local function ak(ah, ai)
    stopAllScripts()
    writefile("WorldZero//" .. ah .. '.txt', h:JSONEncode(ai))
end

local al = {KillAura, PetSkill, AutoFarm, GetDrop, NoClip, InfJump, ReLoadOnHop, ReduceLag, RepeatRaid, NoCutScene,
            DelEgg, SellNonLegend, AutoSwitch, SellLegend, AiPing, MoLPass, MaxPerk, HPHalf, KlausDown}
ag('WZ_Toggles', al)
local am = {
    Webhook = 'https://discord.com/api/webhooks/1249664506448187443/2me_mJp4i155tl1fayEFVaYIS-yzp9FNqQAGRyI1v4xe56MYdc8KDYBaA9Yw4Vevl3jw'
}
ag('WZwebhook', am)
local an = syn and syn.queue_on_teleport or fluxus and fluxus.queue_on_teleport or queue_on_teleport;
local ao = 'loadstring(game:HttpGet("https://raw.githubusercontent.com/maihoangphi2531/worldzero/main/test"))()'
ak('WZ_Kick', ap)
local aq = {
    ['Swordmaster'] = {
        Swordmaster1 = {
            last = 0,
            cooldown = .26
        },
        Swordmaster2 = {
            last = 0,
            cooldown = .26
        },
        Swordmaster3 = {
            last = 0,
            cooldown = .26
        },
        Swordmaster4 = {
            last = 0,
            cooldown = .26
        },
        Swordmaster5 = {
            last = 0,
            cooldown = .26
        },
        Swordmaster6 = {
            last = 0,
            cooldown = .26
        }
    },
    ['Defender'] = {
        Defender1 = {
            last = 0,
            cooldown = .6
        },
        Defender2 = {
            last = 0,
            cooldown = .6
        },
        Defender3 = {
            last = 0,
            cooldown = .6
        },
        Defender4 = {
            last = 0,
            cooldown = .6
        },
        Defender5 = {
            last = 0,
            cooldown = .6
        }
    },
    ['DualWielder'] = {
        CrossSlash1 = {
            last = 0,
            cooldown = 6
        },
        CrossSlash2 = {
            last = 0,
            cooldown = 6
        },
        CrossSlash3 = {
            last = 0,
            cooldown = 6
        },
        CrossSlash4 = {
            last = 0,
            cooldown = 6
        },
        CrossSlash5 = {
            last = 0,
            cooldown = 6
        },
        CrossSlash6 = {
            last = 0,
            cooldown = 6
        },
        DashStrike = {
            last = 0,
            cooldown = 6
        },
        DualWieldUltimateHit1 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateHit2 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateHit3 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateHit4 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateHit5 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateHit6 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateHit7 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateHit8 = {
            last = 0,
            cooldown = 30
        }
    },
    ['Berserker'] = {
        Berserker1 = {
            last = 0,
            cooldown = 1 / 2
        },
        Berserker2 = {
            last = 0,
            cooldown = 1 / 2
        },
        Berserker3 = {
            last = 0,
            cooldown = 1 / 2
        },
        Berserker4 = {
            last = 0,
            cooldown = 1 / 2
        },
        Berserker5 = {
            last = 0,
            cooldown = 1 / 2
        },
        Berserker6 = {
            last = 0,
            cooldown = 1 / 2
        },
        Fissure1 = {
            last = 0,
            cooldown = 10
        },
        Fissure2 = {
            last = 0,
            cooldown = 10
        },
        FissureErupt1 = {
            last = 0,
            cooldown = 10
        },
        FissureErupt2 = {
            last = 0,
            cooldown = 10
        },
        FissureErupt3 = {
            last = 0,
            cooldown = 10
        },
        FissureErupt4 = {
            last = 0,
            cooldown = 10
        },
        FissureErupt5 = {
            last = 0,
            cooldown = 10
        },
        FissureErupt6 = {
            last = 0,
            cooldown = 10
        },
        FissureErupt7 = {
            last = 0,
            cooldown = 10
        },
        FissureErupt8 = {
            last = 0,
            cooldown = 10
        }
    },
    ['Paladin'] = {
        Paladin1 = {
            last = 0,
            cooldown = 1 / 2
        },
        Paladin2 = {
            last = 0,
            cooldown = 1 / 2
        },
        Paladin3 = {
            last = 0,
            cooldown = 1 / 2
        },
        Paladin4 = {
            last = 0,
            cooldown = 1 / 2
        },
        LightPaladin1 = {
            last = 0,
            cooldown = 3 / 4
        },
        LightPaladin2 = {
            last = 0,
            cooldown = 3 / 4
        },
        LightPaladin3 = {
            last = 0,
            cooldown = 3 / 4
        },
        LightPaladin4 = {
            last = 0,
            cooldown = 3 / 4
        }
    },
    ['Demon'] = {
        DemonDPS1 = {
            last = 0,
            cooldown = 2.8
        },
        DemonDPS2 = {
            last = 0,
            cooldown = 2.8
        },
        DemonDPS3 = {
            last = 0,
            cooldown = 2.8
        },
        DemonDPS4 = {
            last = 0,
            cooldown = 2.8
        },
        DemonDPS5 = {
            last = 0,
            cooldown = 2.8
        },
        DemonDPS6 = {
            last = 0,
            cooldown = 2.8
        },
        DemonDPS7 = {
            last = 0,
            cooldown = 2.8
        },
        DemonDPS8 = {
            last = 0,
            cooldown = 2.8
        },
        DemonDPS9 = {
            last = 0,
            cooldown = 2.8
        }
    }
}
local ar = {
    ['Mage'] = {
        Mage1 = {
            last = 0,
            cooldown = .3
        },
        Mage2 = {
            last = 0,
            cooldown = .3
        },
        Mage3 = {
            last = 0,
            cooldown = .3
        },
        ArcaneBlast = {
            last = 0,
            cooldown = 5
        },
        ArcaneWave1 = {
            last = 0,
            cooldown = 8
        },
        ArcaneWave2 = {
            last = 0,
            cooldown = 8
        },
        ArcaneWave3 = {
            last = 0,
            cooldown = 8
        },
        ArcaneWave4 = {
            last = 0,
            cooldown = 8
        },
        ArcaneWave5 = {
            last = 0,
            cooldown = 8
        },
        ArcaneWave6 = {
            last = 0,
            cooldown = 8
        },
        ArcaneWave7 = {
            last = 0,
            cooldown = 8
        },
        ArcaneWave8 = {
            last = 0,
            cooldown = 8
        },
        ArcaneWave9 = {
            last = 0,
            cooldown = 8
        },
        ArcaneBlastAOE = {
            last = 0,
            cooldown = 15
        }
    },
    ['IcefireMage'] = {
        IcefireMage1 = {
            last = 0,
            cooldown = .3
        },
        IcefireMage2 = {
            last = 0,
            cooldown = .3
        },
        IcefireMage3 = {
            last = 0,
            cooldown = .3
        },
        IcySpikes1 = {
            last = 0,
            cooldown = 6
        },
        IcySpikes2 = {
            last = 0,
            cooldown = 6
        },
        IcySpikes3 = {
            last = 0,
            cooldown = 6
        },
        IcySpikes4 = {
            last = 0,
            cooldown = 6
        },
        IcySpikes5 = {
            last = 0,
            cooldown = 6
        },
        IcefireMageFireball = {
            last = 0,
            cooldown = 10
        },
        IcefireMageFireballBlast = {
            last = 0,
            cooldown = 10
        },
        LightningStrike1 = {
            last = 0,
            cooldown = 15
        },
        LightningStrike2 = {
            last = 0,
            cooldown = 15
        },
        LightningStrike3 = {
            last = 0,
            cooldown = 15
        },
        LightningStrike4 = {
            last = 0,
            cooldown = 15
        },
        LightningStrike5 = {
            last = 0,
            cooldown = 15
        },
        IcefireMageUltimateFrost = {
            last = 0,
            cooldown = 20
        },
        IcefireMageUltimateMeteor1 = {
            last = 0,
            cooldown = 20
        },
        IcefireMageUltimateMeteor2 = {
            last = 0,
            cooldown = 20
        },
        IcefireMageUltimateMeteor3 = {
            last = 0,
            cooldown = 20
        },
        IcefireMageUltimateMeteor4 = {
            last = 0,
            cooldown = 20
        }
    },
    ['DualWielder'] = {
        DualWieldUltimateSlam = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSlam1 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSlam2 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSlam3 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword1 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword2 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword3 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword4 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword5 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword6 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword7 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword8 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword9 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword10 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword11 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword12 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword13 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword14 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword15 = {
            last = 0,
            cooldown = 30
        },
        DualWieldUltimateSword16 = {
            last = 0,
            cooldown = 30
        }
    },
    ['Guardian'] = {
        RockSpikes1 = {
            last = 0,
            cooldown = 6
        },
        RockSpikes2 = {
            last = 0,
            cooldown = 6
        },
        RockSpikes3 = {
            last = 0,
            cooldown = 6
        },
        RockSpikes4 = {
            last = 0,
            cooldown = 6
        },
        RockSpikes5 = {
            last = 0,
            cooldown = 6
        },
        SlashFury1 = {
            last = 0,
            cooldown = 8
        },
        SlashFury2 = {
            last = 0,
            cooldown = 8
        },
        SlashFury3 = {
            last = 0,
            cooldown = 8
        },
        SlashFury4 = {
            last = 0,
            cooldown = 8
        },
        SlashFury5 = {
            last = 0,
            cooldown = 8
        },
        SlashFury6 = {
            last = 0,
            cooldown = 8
        },
        SlashFury7 = {
            last = 0,
            cooldown = 8
        },
        SlashFury8 = {
            last = 0,
            cooldown = 8
        },
        SlashFury9 = {
            last = 0,
            cooldown = 8
        },
        SlashFury10 = {
            last = 0,
            cooldown = 8
        },
        SlashFury11 = {
            last = 0,
            cooldown = 8
        },
        SlashFury12 = {
            last = 0,
            cooldown = 8
        },
        SlashFury13 = {
            last = 0,
            cooldown = 8
        },
        SlashFury14 = {
            last = 0,
            cooldown = 8
        },
        SlashFury15 = {
            last = 0,
            cooldown = 8
        },
        SlashFury16 = {
            last = 0,
            cooldown = 8
        }
    },
    ['Berserker'] = {
        AggroSlam = {
            last = 0,
            cooldown = 5
        },
        GigaSpin1 = {
            last = 0,
            cooldown = 7
        },
        GigaSpin2 = {
            last = 0,
            cooldown = 7
        },
        GigaSpin3 = {
            last = 0,
            cooldown = 7
        },
        GigaSpin4 = {
            last = 0,
            cooldown = 7
        },
        GigaSpin5 = {
            last = 0,
            cooldown = 7
        },
        GigaSpin6 = {
            last = 0,
            cooldown = 7
        },
        GigaSpin7 = {
            last = 0,
            cooldown = 7
        },
        GigaSpin8 = {
            last = 0,
            cooldown = 7
        }
    },
    ['Paladin'] = {
        LightThrust1 = {
            last = 0,
            cooldown = 11
        },
        LightThrust2 = {
            last = 0,
            cooldown = 11
        }
    },
    ['MageOfLight'] = {
        MageOfLight = {
            last = 0,
            cooldown = 1 / 4
        },
        MageOfLightBlast = {
            last = 0,
            cooldown = .3
        },
        MageOfLightCharged = {
            last = 0,
            cooldown = .2
        },
        MageOfLightBlastCharged = {
            last = 0,
            cooldown = .1
        }
    },
    ['Demon'] = {
        ScytheThrowDPS1 = {
            last = 0,
            cooldown = 10
        },
        ScytheThrowDPS2 = {
            last = 0,
            cooldown = 10
        },
        ScytheThrowDPS3 = {
            last = 0,
            cooldown = 10
        },
        DemonSoulAOE1 = {
            last = 0,
            cooldown = 15
        },
        DemonSoulAOE2 = {
            last = 0,
            cooldown = 15
        },
        DemonSoulAOE3 = {
            last = 0,
            cooldown = 15
        },
        DemonSoulAOE4 = {
            last = 0,
            cooldown = 15
        },
        DemonLifeStealDPS = {
            last = 0,
            cooldown = 16
        },
        DemonLifeStealAOE = {
            last = 0,
            cooldown = 16
        }
    },
    ['Archer'] = {
        Archer = {
            last = 0,
            cooldown = 1 / 2
        },
        PiercingArrow1 = {
            last = 0,
            cooldown = 5
        },
        PiercingArrow2 = {
            last = 0,
            cooldown = 5
        },
        PiercingArrow3 = {
            last = 0,
            cooldown = 5
        },
        PiercingArrow4 = {
            last = 0,
            cooldown = 5
        },
        PiercingArrow5 = {
            last = 0,
            cooldown = 5
        },
        SpiritBomb = {
            last = 0,
            cooldown = 10
        },
        MortarStrike1 = {
            last = 0,
            cooldown = 12
        },
        MortarStrike2 = {
            last = 0,
            cooldown = 12
        },
        MortarStrike3 = {
            last = 0,
            cooldown = 12
        },
        MortarStrike4 = {
            last = 0,
            cooldown = 12
        },
        MortarStrike5 = {
            last = 0,
            cooldown = 12
        },
        HeavenlySword = {
            last = 0,
            cooldown = 20
        }
    },
    ['Dragoon'] = {
        DragoonCross1 = {
            last = 0,
            cooldown = 5.5
        },
        DragoonCross2 = {
            last = 0,
            cooldown = 5.5
        },
        DragoonCross3 = {
            last = 0,
            cooldown = 5.5
        },
        DragoonCross4 = {
            last = 0,
            cooldown = 5.5
        },
        DragoonCross5 = {
            last = 0,
            cooldown = 5.5
        },
        DragoonCross6 = {
            last = 0,
            cooldown = 5.5
        },
        DragoonCross7 = {
            last = 0,
            cooldown = 5.5
        },
        DragoonCross8 = {
            last = 0,
            cooldown = 5.5
        },
        DragoonCross9 = {
            last = 0,
            cooldown = 5.5
        },
        DragoonCross10 = {
            last = 0,
            cooldown = 5.5
        },
        DragoonDash = {
            last = 0,
            cooldown = 10
        },
        MultiStrikeDragon1 = {
            last = 0,
            cooldown = 12
        },
        MultiStrikeDragon2 = {
            last = 0,
            cooldown = 12
        },
        MultiStrikeDragon3 = {
            last = 0,
            cooldown = 12
        },
        MultiStrikeDragon4 = {
            last = 0,
            cooldown = 12
        },
        MultiStrikeDragon5 = {
            last = 0,
            cooldown = 12
        },
        MultiStrikeDragon6 = {
            last = 0,
            cooldown = 13
        },
        DragoonFall = {
            last = 0,
            cooldown = 12
        },
        DragoonUltimate = {
            last = 0,
            cooldown = 30
        }
    },
    ['Summoner'] = {
        Summoner1 = {
            last = 0,
            cooldown = .01
        },
        Summoner2 = {
            last = 0,
            cooldown = .01
        },
        Summoner3 = {
            last = 0,
            cooldown = .01
        },
        Summoner4 = {
            last = 0,
            cooldown = .01
        }
    },
    ['Warlord'] = {
        Piledriver1 = {
            last = 0,
            cooldown = 3
        },
        Piledriver2 = {
            last = 0,
            cooldown = 3
        },
        Piledriver3 = {
            last = 0,
            cooldown = 3
        },
        Piledriver4 = {
            last = 0,
            cooldown = 3
        },
        ChainsOfWar = {
            last = 0,
            cooldown = 6
        },
        BlockingWarlord = {
            last = 0,
            cooldown = 10
        },
        WarlordUltimate1 = {
            last = 0,
            cooldown = 15
        },
        WarlordUltimate2 = {
            last = 0,
            cooldown = 15
        },
        WarlordUltimate3 = {
            last = 0,
            cooldown = 15
        },
        WarlordUltimate4 = {
            last = 0,
            cooldown = 15
        },
        WarlordUltimate5 = {
            last = 0,
            cooldown = 15
        }
    }
}
local function as(at)
stopAllScripts()
    local au = {"", "K", "M", "B", "T"}
    for A, av in ipairs(au) do
        if at < 1000 then
            return string.format("%.1f%s", at, av)
        end
        at = at / 1000
    end
    return string.format("%.1f%s", at, "P")
end
local function aw(b)
stopAllScripts()
    m:SendKeyEvent(true, b, false, game)
end
local function ax(b)
stopAllScripts()
    m:SendKeyEvent(false, b, false, game)
end
local function ay()
stopAllScripts()
    local az = {'Swordmaster', 'Defender', 'DualWielder', 'Berserker', 'Guardian', 'Paladin', 'Dragoon', 'Demon',
                'Warlord'}
    for aA, aB in ipairs(az) do
        if ad == aB then
            return true
        end
    end
    return false
end
local function aC()
stopAllScripts()
    local aD = {'Mage', 'IcefireMage', 'MageOfLight', 'Archer', 'Summoner'}
    for aA, aB in ipairs(aD) do
        if ad == aB then
            return true
        end
    end
    return false
end
local function aE(aa)
stopAllScripts()
    return os.clock() - aa > ac
end
local function aF()
stopAllScripts()
    local aG = k.Profile[H.Name].Equip.Offhand;
    return not aG:IsEmpty()
end
function IsAlive()
stopAllScripts()
    local aH = game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart')
    return aH ~= nil
end
local function aI(aJ)
stopAllScripts()
    if IsAlive() then
        J.CanCollide = aJ
    end
end
local function aK()
stopAllScripts()
    if not J:FindFirstChild('BodyVelocity') then
        local aL = Instance.new 'BodyVelocity'
        aL.Velocity = Vector3.new(0, 0, 0)
        aL.MaxForce = Vector3.new(900000, 900000, 900000)
        aL.P = 9000;
        aL.Parent = J
    end
end
local function aM()
stopAllScripts()
    for aA, B in pairs(J:GetChildren()) do
        if B:IsA('BodyVelocity') then
            B:Destroy()
        end
    end
end
local function aN()
stopAllScripts()
    for aA, aO in pairs(_) do
        if game.PlaceId ~= aO then
            if e:WaitForChild('MissionObjects'):FindFirstChild('MissionStart') then
                for aA, B in pairs(e.MissionObjects.MissionStart:GetDescendants()) do
                    if B:IsA('TouchTransmitter') and B.Parent then
                        B.Parent.CFrame = J.CFrame
                    end
                end
            end
        end
    end
end
local function aP()
stopAllScripts()
    if IsAlive() then
        for aA, B in pairs(I:GetChildren()) do
            if B:IsA('BasePart') and B.Name == 'Collider' then
                B.Touched:Connect(function(aQ)
                    if aQ:IsA('BasePart') and aQ.Transparency ~= 1 then
                        if aQ.Parent ~= I then
                            local aR = .3;
                            aQ.Transparency = aR;
                            local aS = Color3.fromRGB(140, 140, 140)
                            aQ.Color = aS
                        end
                    end
                end)
            end
        end
    end
end
local function aT(aU)
stopAllScripts()
    m:SendMouseButtonEvent(aU.AbsolutePosition.X + aU.AbsoluteSize.X / 2, aU.AbsolutePosition.Y + 50, 0, true, aU, 1)
    m:SendMouseButtonEvent(aU.AbsolutePosition.X + aU.AbsoluteSize.X / 2, aU.AbsolutePosition.Y + 50, 0, false, aU, 1)
end
local function aV(aW)
stopAllScripts()
    local aX = k.Profile[H.Name].Equip.Offhand:FindFirstChildOfClass("Folder")
    local aY = aW.HealthProperties;
    local aZ = aY.MaxHealth;
    local a_ = require(z.Shared.Mobs).IsElite;
    local b0 = require(z.Shared.Mobs.Mobs[aW.Name])
    local b1 = ''
    if b0.BossTag ~= false then
        b1 = 'TestTier5'
    elseif b0.BossTag == false then
        if a_(aW) then
            b1 = 'EliteBoss'
        else
            b1 = 'MobBoss'
        end
    end
    if math.floor(aY.Health.Value / aZ.Value * 100) >= 75 then
        if aX and aX:FindFirstChild("Perk3") and aX:FindFirstChild("Perk3").Value == 'OpeningStrike' then
            z.Shared.Settings.OffhandPerksActive:FireServer(true)
            repeat
                wait()
            until math.floor(aY.Health / aZ * 100) < 75
        else
            z.Shared.Settings.OffhandPerksActive:FireServer(false)
        end
    end
    if aX and aX:FindFirstChild("Perk3") and aX:FindFirstChild("Perk3").Value == b1 then
        z.Shared.Settings.OffhandPerksActive:FireServer(true)
    else
        z.Shared.Settings.OffhandPerksActive:FireServer(false)
    end
end
local b2 = 100;
local b3 = f.Heartbeat;
local function b4(aW)
stopAllScripts()
    if typeof(aW) == "Instance" and aW:IsA("BasePart") then
        aW = aW.Position
    end
    if typeof(aW) == "CFrame" then
        aW = aW.p
    end
    if not J then
        return
    end
    local b5 = J.Position;
    local b6 = aW - b5;
    local b7 = tick()
    local b8 = (b5 - aW).magnitude / b2;
    repeat
        b3:Wait()
        local b9 = tick() - b7;
        local ba = math.min(b9 / b8, 1)
        local bb = b5 + b6 * ba;
        J.Velocity = Vector3.new()
        J.CFrame = CFrame.new(bb)
    until (J.Position - aW).magnitude <= b2 / 2;
    J.Anchored = false;
    local bc, bd, be = 0, 0, 12;
    J.CFrame = CFrame.new(aW) + Vector3.new(bc, bd, be)
end
local function bf(bg)
stopAllScripts()
    bg = 0;
    task.spawn(function()
        while al.KillAura do
            local bh = math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())
            if bh > 150 and al.AiPing then
                bg = bh / 1200
            else
                bg = 0
            end
            task.wait()
        end
    end)
    return bg
end
local function bi(aW)
stopAllScripts()
    local bj = math.huge;
    for aA, B in pairs(e.Mobs:GetChildren()) do
        if not table.find(a2, B.Name) then
            if B:FindFirstChild('Collider') and B:FindFirstChild('HealthProperties') and
                not B:FindFirstChild('NoHealthbar') then
                local b9 = math.floor((J.Position - B.WorldPivot.Position).Magnitude)
                if b9 <= bj and B.HealthProperties.Health.Value > 0 then
                    bj = b9;
                    aW = B.Collider
                end
            end
        end
    end
    if game.PlaceId == Y[1] then
        if e.Mobs:FindFirstChild('BOSSTreeEnt') and e.Mobs.BOSSTreeEnt.HealthProperties.Health.Value /
            e.Mobs.BOSSTreeEnt.HealthProperties.MaxHealth.Value * 100 <= 50 then
            for A = 1, 3 do
                local bk = e:WaitForChild('Pillar' .. A)
                if bk:FindFirstChild('HealthProperties') and bk.HealthProperties.Health.Value ~= 0 then
                    aW = bk.Base
                end
            end
        end
    end
    if game.PlaceId == Y[3.2] then
        if H.PlayerGui.MissionObjective.MissionObjective.Label.Text == 'Destroy the Ice Barricade!' then
            if e.MissionObjects.IceBarricade:FindFirstChild('HealthProperties') and
                e.MissionObjects.IceBarricade.HealthProperties.Health.Value ~= 0 then
                aW = e.MissionObjects.IceBarricade.Part
            end
        end
    end
    if game.PlaceId == Y[3] then
        if game.PlaceId == Y[3] then
            for A = 1, 3 do
                local bl = e.MissionObjects.SpikeCheckpoints:WaitForChild('Blocker' .. A)
                if bl:FindFirstChild('HealthProperties') and bl.HealthProperties.Health.Value ~= 0 then
                    aW = bl.Part
                end
            end
        end
        if e.Mobs:FindFirstChild('BOSSWinterfallIceDragon') and e.Mobs.BOSSWinterfallIceDragon.Collider.Position.y > 300 then
            aW = nil
        end
    end
    if game.PlaceId == Y[4.1] then
        if e.MissionObjects.TowerLegs:FindFirstChild('Model') and
            e.MissionObjects.TowerLegs.Model:FindFirstChild('HealthProperties') then
            aW = e.MissionObjects.TowerLegs.Model.hitbox
        end
        if e.Mobs:FindFirstChild('BOSSHogRider') and e.Mobs.BOSSHogRider.Collider.Position.y < 380 then
            aW = e.Mobs.BOSSHogRider.Collider
        end
    end
    if game.PlaceId == Y[4] then
        if e.Mobs:FindFirstChild('BOSSAnubis') then
            if not e.Mobs.BOSSAnubis.MobProperties.Busy:FindFirstChild('Shield') then
                aW = e.Mobs.BOSSAnubis.Collider
            end
        end
    end
    if game.PlaceId == Y[5.1] and e.Mobs:FindFirstChild('CorruptedGreaterTree') then
        if not e:FindFirstChild('GreaterTreeShield') then
            aW = e.Mobs.CorruptedGreaterTree.Collider
        end
    end
    if game.PlaceId == Y[6.1] then
        if e.Mobs:FindFirstChild('DavyJones') and not aW then
            aW = e.Mobs.DavyJones.Collider
        end
        if e:FindFirstChild('TriggerBarrel') then
            aW = e.TriggerBarrel.Collision
        end
    end
    if game.PlaceId == Z[2] then
        if e.Mobs:FindFirstChild('BOSSKrakenMain') then
            for A = 1, 8 do
                local bm = workspace.Mobs:FindFirstChild('BOSSKrakenArm3-Arm#' .. A)
                if bm and bm.HealthProperties.Health.Value ~= 0 then
                    aW = bm.Subcollider.SubPrimaryPart
                end
            end
        end
    end
    return aW
end
local function bn(bo)
stopAllScripts()
    local bj = math.huge;
    for aA, B in pairs(e.Mobs:GetChildren()) do
        if not table.find(a2, B.Name) then
            if B:FindFirstChild('Collider') and B:FindFirstChild('HealthProperties') and
                not B:FindFirstChild('NoHealthbar') then
                local b9 = math.floor((J.Position - B.WorldPivot.Position).Magnitude)
                if b9 <= bj and B.HealthProperties.Health.Value > 0 then
                    bj = b9;
                    bo = B
                end
            end
        end
    end
    return bo
end
local function bp(bq)
stopAllScripts()
    local bj = math.huge;
    if e.Mobs:FindFirstChild('SummonerSummonWeak') then
        for aA, B in pairs(e.Mobs:GetChildren()) do
            if not table.find(a2, B.Name) then
                if B:FindFirstChild('Collider') and B:FindFirstChild('HealthProperties') then
                    local b9 = (e.Mobs.SummonerSummonWeak.WorldPivot.Position - B.WorldPivot.Position).Magnitude;
                    if b9 <= bj and B.HealthProperties.Health.Value > 8000 then
                        bj = b9;
                        bq = B.Collider
                    end
                end
            end
        end
    end
    return bq
end
if ad == 'Mage' then
    ab = 60;
    ac = ac + bf()
elseif ad == 'Swordmaster' then
    ab = 15;
    ac = ac + bf()
elseif ad == 'Defender' then
    ab = 15;
    ac = ac + bf()
elseif ad == 'DualWielder' then
    ab = 15;
    a5 = 9 / 64 + bf()
elseif ad == 'Berserker' then
    ab = 15;
    ac = ac + bf()
elseif ad == 'Guardian' then
    ab = 15;
    a5 = 1 / 3 + bf()
elseif ad == 'Paladin' then
    ab = 20;
    ac = ac + bf()
elseif ad == 'IcefireMage' then
    ab = 95;
    ac = ac + bf()
elseif ad == 'MageOfLight' then
    ab = 95;
    ac = ac + bf()
elseif ad == 'Dragoon' then
    ab = 15;
    a5 = 9 / 64 + bf()
elseif ad == 'Demon' then
    ab = 15;
    a5 = .5 + bf()
elseif ad == 'Archer' then
    ab = 80;
    ac = ac + bf()
elseif ad == 'Summoner' then
    ab = 80;
    ac = 1 / 2 + bf()
elseif ad == 'Warlord' then
    ab = 15;
    a5 = 5 / 64 + bf()
end
local function br()
    stopAllScripts()

    -- Lấy class của LocalPlayer và in log một lần
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local playerClass = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Properties") and 
                        LocalPlayer.Character.Properties:FindFirstChild("Class") and 
                        LocalPlayer.Character.Properties.Class.Value

    -- Log class hiện tại
    if playerClass then
        print("[Log] Class hiện tại của LocalPlayer:", playerClass)
    else
        print("[Log] Không tìm thấy class của LocalPlayer")
    end

    task.spawn(function()
        while al.KillAura and IsAlive() do
            local aW = bi()

            -- Kiểm tra aW tồn tại và có thuộc tính 'HealthProperties'
            if aW and aW.Parent and aW.Parent:FindFirstChild("HealthProperties") then
                local health = aW.Parent.HealthProperties.Health
                if health and health.Value < 1 then
                    break
                end
            end

            -- Danh sách các class
            local rangedClasses = {'Mage', 'IcefireMage', 'MageOfLight', 'Archer', 'Summoner'}
            local meleeClasses = {'Swordmaster', 'Defender', 'DualWielder', 'Berserker', 'Guardian', 'Paladin', 'Dragoon', 'Demon', 'Warlord'}

            -- Kiểm tra class của ngzười chơi
            if table.find(rangedClasses, playerClass) then
                -- Điều kiện cho các class tầm xa
                if aW and aW.Position and (J.Position - aW.Position).Magnitude < ab then
                    if ar and ar[ad] then
                        for bs, B in pairs(ar[ad]) do
                            if os.clock() - B.last > B.cooldown and aE(aa) then
                                -- Cập nhật args cho các class tầm xa
                                local args = {
                                    [1] = bs,  -- bs là tên kỹ năng
                                    [2] = aW.Position,  -- Vị trí mục tiêu
                                    [4] = 1  -- Một giá trị có thể là boolean
                                }

                                local success = pcall(function()
                                    game:GetService("ReplicatedStorage"):WaitForChild("Shared"):WaitForChild("Combat"):WaitForChild("Attack"):FireServer(unpack(args))
                                end)

                                if success then
                                    B.last = os.clock()
                                    aa = os.clock()
                                end
                            end
                        end
                    end
                end
            elseif table.find(meleeClasses, playerClass) then
                -- Điều kiện cho các class cận chiến
                KillAura.State = false -- Tắt KillAura cho các class cận chiến
                print("[Log] KillAura.State đã được đặt thành false cho class cận chiến:", playerClass)

                if aW and aW.Position and (J.Position - aW.Position).Magnitude < ab then
                    if ar and ar[ad] then
                        for bs, B in pairs(ar[ad]) do
                            if os.clock() - B.last > B.cooldown and aE(aa) then
                                -- Cập nhật args cho các class cận chiến
                                local args = {
                                    [1] = bs,  -- bs là tên kỹ năng
                                    [2] = aW.Position,  -- Vị trí mục tiêu
                                    [2] = aW.Position,  -- Vị trí mục tiêu vẫn là aW
                                    [4] = 1
                                }

                                local success = pcall(function()
                                    game:GetService("ReplicatedStorage"):WaitForChild("Shared"):WaitForChild("Combat"):WaitForChild("Attack"):FireServer(unpack(args))
                                end)

                                if success then
                                    B.last = os.clock()
                                    aa = os.clock()
                                end
                            end
                        end
                    end
                end
            end

            task.wait()
        end
    end)
end
local function bt()
stopAllScripts()
    task.spawn(function()
        while al.KillAura and IsAlive() do
            local aW = bi()

            -- Kiểm tra aW và HealthProperties
            if aW and aW.Parent and aW.Parent:FindFirstChild("HealthProperties") then
                local health = aW.Parent.HealthProperties.Health
                if health and health.Value < 1 then
                    break
                end
            end

            -- Kiểm tra khoảng cách giữa J và aW
            if aW and aW.Position and (J.Position - aW.Position).Magnitude < ab then
                -- Lặp qua các phần tử trong aq[ad]
                if aq and aq[ad] then
                    for bs, B in pairs(aq[ad]) do
                        if os.clock() - B.last > B.cooldown and aE(aa) then
                            if Q and J.Position then
                                Q:AttackWithSkill(bs, J.Position, J.CFrame.lookVector)
                                B.last = os.clock()
                                aa = os.clock()
                                break
                            end
                        end
                    end
                end
            end
            task.wait()
        end
    end)
end


local function bu()
stopAllScripts()
    task.spawn(function()
        local DeBounce = os.clock()
        while al.KillAura and IsAlive() do
            local aW = bi()

            -- Kiểm tra HealthProperties của aW
            if aW and aW.Parent and aW.Parent:FindFirstChild("HealthProperties") then
                local health = aW.Parent.HealthProperties.Health
                if health and health.Value < 1 / 6 then
                    break
                end
            end

            -- Kiểm tra khoảng cách và thời gian DeBounce
            if aW and aW.Position and (J.Position - aW.Position).Magnitude < ab and os.clock() - DeBounce >= a5 then
                DeBounce = os.clock()
                a3 = a3 + 1
                if af[a3] then
                    Q:AttackWithSkill(af[a3], J.Position, J.CFrame.lookVector)
                end

                f.RenderStepped:Wait()

                if a3 >= #af then
                    a3 = 0
                end
            end
            f.RenderStepped:Wait()
        end
    end)
end

local function bv()
stopAllScripts()
    task.spawn(function()
        local DeBounce = os.clock()
        while al.KillAura and IsAlive() do
            local aW = bi()
            if aW and aW.Parent:FindFirstChild 'HealthProperties' and aW.Parent.HealthProperties.Health.Value < 1 then
                break
            end
            if aW and (J.Position - aW.Position).Magnitude < 500 and os.clock() - DeBounce >= 12 then
                DeBounce = os.clock()
                z.Shared.Combat.Skillsets.DualWielder.AttackBuff:FireServer()
                z.Shared.Combat.Skillsets.DualWielder.UpdateSpeed:FireServer(0)
                z.Shared.Combat.Skillsets.Guardian.AggroDraw:FireServer()
            end
            task.wait(12)
        end
    end)
end
local function bw()
stopAllScripts()
    task.spawn(function()
        local bx = U.GetHotbarSkillTile('', 'Ultimate')

        while al.KillAura and IsAlive() do
            if bx.cooling and not al.KillAura then
                break
            end

            local aW = bn()
            if aW and aW:FindFirstChild("HealthProperties") then
                local health = aW.HealthProperties.Health
                if health and health.Value < 1 then
                    break
                end
            end

            if IsAlive() then
                m:SendKeyEvent(true, 'X', false, game)
                task.wait(0.5)
                m:SendKeyEvent(false, 'X', false, game)
            end

            task.wait(30)
        end
    end)
end

local function by()
stopAllScripts()
    task.spawn(function()
        DeBounce = os.clock()
        local bx = U.GetHotbarSkillTile('', 'Ultimate')
        while al.KillAura and IsAlive() do
            if bx.cooldownTimer > 20 and not al.KillAura then
                break
            end
            if os.clock() - DeBounce >= 2 then
                DeBounce = os.clock()
                z.Shared.Combat.Skillsets.Demon.Demonic:FireServer()
                z.Shared.Combat.Skillsets.Demon.Demonic:FireServer()
                z.Shared.Combat.Skillsets.Demon.Demonic:FireServer()
                z.Shared.Combat.Skillsets.Demon.Demonic:FireServer()
                z.Shared.Combat.Skillsets.Demon.Demonic:FireServer()
                z.Shared.Combat.Skillsets.Demon.Demonic:FireServer()
                wait()
                if bx.cooldownTimer > 1 and not al.KillAura then
                    break
                end
                z.Shared.Combat.Skillsets.Demon.Ultimate:FireServer()
            end
            task.wait(30)
        end
    end)
end
local function bz()
stopAllScripts()
    a6, a7, a9 = 30, 26, 6;
    task.spawn(function()
        while al.KillAura and IsAlive() do
            local aW = bn()
            local bA = R:IsOnCooldown('Ultimate')
            if aW and (J.Position - aW.Collider.Position).Magnitude < 80 and
                e.Characters[H.Name].Properties.BackSwordCount.Value == 6 then
                if aW and aW.HealthProperties.Health.Value < 1 / 6 or bA then
                    break
                end
                DeBounce = os.clock()
                a6, a7, a9 = 3 / 64, 16, 66;
                task.wait(1)
                z.Shared.Combat.Skillsets.Archer.Ultimate:FireServer(aW.Collider.Position)
                task.wait(1)
                a6, a7, a9 = 26, 26, 6
            end
            task.wait(30)
        end
    end)
end
local function bB()
stopAllScripts()
    task.spawn(function()
        local DeBounce = os.clock()
        while al.KillAura and IsAlive() do
            local aW = bn()
            if aW and aW:FindFirstChild 'HealthProperties' and aW.HealthProperties.Health.Value < 1 / 6 then
                break
            end
            if aW and e.Characters[H.Name].Properties.SummonCount.Value == 5 and os.clock() - DeBounce >= 8 then
                DeBounce = os.clock()
                X:Summon(aW.Collider.Position)
            end
            task.wait(8)
        end
    end)
    task.spawn(function()
    stopAllScripts()
        local DeBounce = os.clock()
        while al.KillAura and IsAlive() do
            local aW = bi()
            if aW and aW.Parent:FindFirstChild 'HealthProperties' and aW.Parent.HealthProperties.Health.Value < 1 / 6 then
                break
            end
            if aW and (J.Position - aW.Position).Magnitude < 50 and os.clock() - DeBounce >= 10 then
                DeBounce = os.clock()
                z.Shared.Combat.Skillsets.Summoner.SoulHarvest:FireServer(aW.Position)
            end
            task.wait(10)
        end
    end)
    task.spawn(function()

        local DeBounce = os.clock()
        while al.KillAura and IsAlive() do
            local aW = bn()
            if aW and os.clock() - DeBounce >= 30 then
                if aW and aW:FindFirstChild 'HealthProperties' and aW.HealthProperties.Health.Value < 1 / 6 then
                    break
                end
                DeBounce = os.clock()
                X:Ultimate(aW.Collider.Position)
            end
            task.wait(30)
        end
    end)
    task.spawn(function()
 
        local DeBounce = os.clock()
        while al.KillAura and IsAlive() do
            local aW = bp()
            if aW and e.Mobs:FindFirstChild('SummonerSummonWeak') then
                if not IsAlive() then
                    break
                end
                local b9 = (e.Mobs.SummonerSummonWeak.Collider.Position - aW.Position).Magnitude;
                if b9 < 8 and J and os.clock() - DeBounce >= 2 then
                    DeBounce = os.clock()
                    X:ExplodeSummons()
                end
            end
            task.wait(2)
        end
    end)
end
local function bC()
stopAllScripts()
    task.spawn(function()
        local DeBounce = os.clock()
        while al.KillAura and IsAlive() do
            if not IsAlive() then
                break
            end
            if os.clock() - DeBounce >= 1 / 3 then
                DeBounce = os.clock()
                z.Shared.Combat.Skillsets.Warlord.Block:FireServer()
            end
            task.wait(1 / 3)
        end
    end)
end
local bD;
bD = e.ChildAdded:Connect(function(bE)
    if bE.Name == 'RadialIndicator' then
        local bo = bn()
        if bo and not L:GetBossTag(bo) and e.RadialIndicator.Inner.Size.y > 20 then
            a8 = 1
        end
    end
end)
e.ChildRemoved:Connect(function(bE)
    if bE.Name == 'RadialIndicator' then
        if bD then
            bD:Disconnect()
        end
        a8 = 360
    end
end)
Library = loadstring(game:HttpGet("https://bitbucket.org/cat__/turtle-ui/raw/main/Module%20v2"), "Turtle UI")()
local bF = Library:Window({
    Title = game:GetService('MarketplaceService'):GetProductInfo(game.PlaceId).Name,
    TextSize = 18,
    Font = Enum.Font.LuckiestGuy,
    TextColor = Color3.fromRGB(222, 248, 107),
    FrameColor = Color3.fromRGB(63, 72, 80),
    BackgroundColor = Color3.fromRGB(35, 35, 35)
})
local bG = Library:Window({
    Title = "Start: " .. os.date("%I:%M %p"),
    TextSize = 18,
    Font = Enum.Font.LuckiestGuy,
    TextColor = Color3.fromRGB(222, 248, 107),
    FrameColor = Color3.fromRGB(63, 72, 80),
    BackgroundColor = Color3.fromRGB(35, 35, 35)
})
local bH = Library:Window({
    Title = n.country .. " | " .. n.city,
    TextSize = 20,
    Font = Enum.Font.LuckiestGuy,
    TextColor = Color3.fromRGB(222, 248, 107),
    FrameColor = Color3.fromRGB(63, 72, 80),
    BackgroundColor = Color3.fromRGB(35, 35, 35)
})
local bI = Library:Window({
    Title = "Gold: " .. as(game.Players.LocalPlayer.PlayerGui.Profile.Currency.Gold.Value),
    TextSize = 18,
    Font = Enum.Font.LuckiestGuy,
    TextColor = Color3.fromRGB(222, 248, 107),
    FrameColor = Color3.fromRGB(63, 72, 80),
    BackgroundColor = Color3.fromRGB(35, 35, 35)
})

local bJ = Library:Window({
    Title = "Running",
    TextSize = 20,
    Font = Enum.Font.LuckiestGuy,
    TextColor = Color3.fromRGB(222, 248, 107),
    FrameColor = Color3.fromRGB(63, 72, 80),
    BackgroundColor = Color3.fromRGB(35, 35, 35)
})
local bK = Library:Window({
    Title = "Ping: " .. math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue()),
    TextSize = 18,
    Font = Enum.Font.LuckiestGuy,
    TextColor = Color3.fromRGB(222, 248, 107),
    FrameColor = Color3.fromRGB(63, 72, 80),
    BackgroundColor = Color3.fromRGB(35, 35, 35)
})
local bL = Library:Window({
    Title = "Misc",
    TextSize = 18,
    Font = Enum.Font.LuckiestGuy,
    TextColor = Color3.fromRGB(222, 248, 107),
    FrameColor = Color3.fromRGB(63, 72, 80),
    BackgroundColor = Color3.fromRGB(35, 35, 35)
})
al.KillAura = true
local KillAura = bF:Toggle({
    Text = "KillAura",
    TextSize = 22,
    TextColor = Color3.fromRGB(255, 187, 109),
    Font = Enum.Font.FredokaOne,
    Disable = false,
    Enabled = al.KillAura,
    Callback = function(aJ)
        task.spawn(function()
            al.KillAura = aJ;
            if al.KillAura then
                ak('WZ_Toggles', al)
                if ad == 'Guardian' then
                    bw()
                elseif ad == 'Demon' then
                    by()
                elseif ad == 'Archer' then
                    bz()
                elseif ad == 'Summoner' then
                    bB()
                elseif ad == 'Warlord' then
                    bC()
                end
                for bM in pairs(ar) do
                    if bM == ad then
                        br()
                        bv()
                    end
                end
                for bM in pairs(aq) do
                    if bM == ad then
                        bt()
                        bv()
                    end
                end
                for bM in pairs(ae) do
                    if bM == ad then
                        bu()
                    end
                end
            end
        end)
    end
})
al.PetSkill = true
local PetSkill = bF:Toggle({
    Text = "PetSkill",
    TextSize = 22,
    TextColor = Color3.fromRGB(255, 187, 109),
    Font = Enum.Font.FredokaOne,
    Disable = false,
    Enabled = al.PetSkill,
    Callback = function(aJ)
        task.spawn(function()
            al.PetSkill = aJ;
            ak('WZ_Toggles', al)
            while al.PetSkill do
                aw(Enum.KeyCode.One)
                wait()
                ax(Enum.KeyCode.One)
                wait(15)
            end
        end)
    end
})
al.AutoFarm = true
local AutoFarm = bF:Toggle({
    Text = "AutoFarm",
    TextSize = 22,
    TextColor = Color3.fromRGB(255, 187, 109),
    Font = Enum.Font.FredokaOne,
    Disable = false,
    Enabled = al.AutoFarm,
    Callback = function(aJ)
        al.AutoFarm = aJ;
        task.spawn(function()
            ak('WZ_Toggles', al)
            aK()
            aP()
            aI(false)
            aN()
            if aC() then
                a6, a7, a9 = 36, 30, 6
            elseif ay() then
                a6, a7, a9 = .1, 14, 5
            end
            if not al.AutoFarm then
                aI(true)
                aM()
            end
        end)
        task.spawn(function()
            local bN;
            local bO = TweenInfo.new(a4, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out)
            while al.AutoFarm do
                local aW = bi()
                if aW and aW.Parent:FindFirstChild('HealthProperties') and aW.Parent.HealthProperties.Health.Value < 1 /
                    6 then
                    break
                end
                if aW then
                    local bP = a8 * (tick() % a9) / a9;
                    bN = i:Create(J, bO, {
                        CFrame = CFrame.new(aW.Position) * CFrame.Angles(0, math.rad(bP), 0) * CFrame.new(0, a6, a7)
                    })
                    bN:Play()
                end
                f.Heartbeat:Wait()
            end
            if bN and bN.PlaybackState == Enum.PlaybackState.Playing then
                bN:Cancel()
            end
            if not al.AutoFarm then
                aM()
            end
        end)
    end
})
al.GetDrop = true
local bQ = bF:Toggle({
    Text = "GetDrops",
    TextSize = 22,
    TextColor = Color3.fromRGB(255, 187, 109),
    Font = Enum.Font.FredokaOne,
    Enabled = al.GetDrop,
    Callback = function(aJ)
        al.GetDrop = aJ;
        task.spawn(function()
            ak('WZ_Toggles', al)
            local bR = getupvalue(N.Start, 4)
            while al.GetDrop do
                if not al.GetDrop then
                    break
                end
                for A, B in pairs(bR) do
                    B.model:Destroy()
                    B.followPart:Destroy()
                    z.Shared.Drops.CoinEvent:FireServer(B.id)
                    table.remove(bR, A)
                end
                task.wait(1 / 3)
            end
        end)
    end
})
al.DelEgg=true
local c9 = bG:Toggle({
    Text = "DeleteEggs",
    TextSize = 22,
    TextColor = Color3.fromRGB(255, 187, 109),
    Font = Enum.Font.FredokaOne,
    Enabled = al.DelEgg,
    Callback = function(aJ)
        al.DelEgg = aJ;
        task.spawn(function()
            ak('WZ_Toggles', al)
            local ca = k.Profile[H.Name].Inventory.Items;
            ca.DescendantAdded:Connect(function()
                for aA, B in pairs(ca:GetChildren()) do
                    if string.find(B.Name, "Egg") then
                        z.Shared.Inventory.DeleteItem:FireServer(B)
                    end
                end
            end)
            H.CharacterAdded:Connect(function()
                for aA, B in pairs(ca:GetChildren()) do
                    if table.find(a1, B.Name) then
                        task.delay(2, function()
                            z.Shared.Inventory.DeleteItem:FireServer(B)
                        end)
                    end
                end
            end)
        end)
    end
})

bH:Button({
    Text = "Bank",
    TextSize = 22,
    Font = Enum.Font.FredokaOne,
    TextColor = Color3.fromRGB(255, 187, 109),
    Callback = function()
        if e:FindFirstChild("MenuRings") and e.MenuRings:FindFirstChild("Bank") then
            e.MenuRings.Bank.Ring.CFrame = I:WaitForChild('LeftFoot').CFrame * CFrame.new(0, 0, -12)
            e.MenuRings.Bank.Floor.CFrame = I:WaitForChild('LeftFoot').CFrame * CFrame.new(0, 0, -12)
        end
    end
})
bH:Button({
    Text = "Upgrade",
    TextSize = 22,
    Font = Enum.Font.FredokaOne,
    TextColor = Color3.fromRGB(255, 187, 109),
    Callback = function()
        require(z.Client.Gui.GuiScripts.ItemUpgrade):Toggle()
    end
})
bH:Button({
    Text = "Zero Altar",
    TextSize = 22,
    Font = Enum.Font.FredokaOne,
    TextColor = Color3.fromRGB(255, 187, 109),
    Callback = function()
        require(z.Client.Gui.GuiScripts.Fusion):Open()
    end
})
bH:Button({
    Text = "Way Stones",
    TextSize = 22,
    Font = Enum.Font.FredokaOne,
    TextColor = Color3.fromRGB(255, 187, 109),
    Callback = function()
        require(z.Client.Gui.GuiScripts.Waystones):Open()
    end
})
bH:Button({
    Text = "World Menu",
    TextSize = 22,
    Font = Enum.Font.FredokaOne,
    TextColor = Color3.fromRGB(255, 187, 109),
    Callback = function()
        require(z.Client.Gui.GuiScripts.WorldTeleport):Toggle()
    end
})
bH:Button({
    Text = "Dungeon Menu",
    TextSize = 22,
    Font = Enum.Font.FredokaOne,
    TextColor = Color3.fromRGB(255, 187, 109),
    Callback = function()
        require(z.Client.Gui.GuiScripts.MissionSelect):Toggle()
    end
})

al.MolPass=true
local MoLPass = bI:Toggle({
    Text = "MoLPassive",
    TextSize = 22,
    TextColor = Color3.fromRGB(255, 187, 109),
    Font = Enum.Font.FredokaOne,
    Enabled = al.MoLPass,
    Callback = function(aJ)
        al.MoLPass = aJ;
        task.spawn(function()
            while al.MoLPass do
                local character = e.Characters[H.Name]
                local cg = require(z.Shared.Party):GetPartyByUsername(H.Name)
                if character and character.HealthProperties.Health.Value / character.HealthProperties.MaxHealth.Value *
                    100 < 99 then
                    for aA, ch in pairs(d:GetPlayers()) do
                        if cg and cg.Members:FindFirstChild(ch.Name) then
                            z.Shared.Combat.Skillsets.MageOfLight.HealCircle:FireServer(ch)
                        end
                    end
                end
                task.wait(14)
            end
        end)
        task.spawn(function()
            ak('WZ_Toggles', al)
            while al.MoLPass do
                local character = e.Characters[H.Name]
                local cg = require(z.Shared.Party):GetPartyByUsername(H.Name)
                if character and character.HealthProperties.BarrierHealth.Value <= 0 then
                    for aA, ch in pairs(d:GetPlayers()) do
                        if cg and cg.Members:FindFirstChild(ch.Name) then
                            z.Shared.Combat.Skillsets.MageOfLight.Barrier:FireServer(ch)
                        end
                    end
                end
                task.wait(15)
            end
        end)
    end
})

e.ChildAdded:Connect(function(ci)
    if ci.Name == 'BarrierPart' then
        task.defer(ci.Destroy, ci)
    end
end)
local hasRun = false  -- Đặt biến này ra ngoài hàm Connect để duy trì giá trị đúng cách
al.RepeatRaid = true
local RepeatRaid = bI:Toggle({
    Text = "RepeatRaid",
    TextSize = 22,
    TextColor = Color3.fromRGB(255, 187, 109),
    Font = Enum.Font.FredokaOne,
    Enabled = al.RepeatRaid,
    Callback = function(aJ)
        al.RepeatRaid = aJ;
        task.spawn(function()
            ak('WZ_Toggles', al)
            for aA, B in pairs(_) do
                if game.PlaceId ~= B and al.RepeatRaid then
                    local cj = H.PlayerGui.MissionRewards.MissionRewards;
                    if cj.Playerlist.Visible then
                        S:SetLeaveChoice(H, true)
                        S:NotifyReadyToLeave(H)
                    end
                    cj.RaidClear:GetPropertyChangedSignal('Text'):Connect(function()
                        if cj.RaidClear.Text == 'T O W E R    F A I L U R E' then
                            S:SetLeaveChoice(H, true)
                            S:NotifyReadyToLeave(H)
                        end
                    end)
                    cj.RaidClear:GetPropertyChangedSignal('Text'):Connect(function()
                        if string.find(cj.RaidClear.Text, "Y O U    D I E D    O N    F L O O R") then
                            S:SetLeaveChoice(H, true)
                            S:NotifyReadyToLeave(H)
                        end
                    end)
                    cj.RaidClear:GetPropertyChangedSignal('Text'):Connect(function()
                        if cj.RaidClear.Text == 'D U N G E O N    F A I L U R E' then
                            S:SetLeaveChoice(H, true)
                            S:NotifyReadyToLeave(H)
                        end
                    end)
                    H.PlayerGui.TowerFinish.TowerFinish.Description.Overlay:GetPropertyChangedSignal('Text'):Connect(function()
                        if H.PlayerGui.TowerFinish.TowerFinish.Description.Overlay.Text == 'Collect your rewards! (40)' and not hasRun then
                            hasRun = true  -- Đặt biến cờ thành true ngay khi thiết lập webhook
                            
                            -- WEBHOOK
                            local OSTime = os.time()
                            local Time = os.date('!*t', OSTime)
                            local Avatar = 'https://cdn.discordapp.com/embed/avatars/4.png'
                            local Content = 'Treo Acc World//Zero AnyaTeam'

                            -- Lấy tên nhân vật Roblox hiện tại
                            local player = game.Players.LocalPlayer
                            local playerName = player.Name

                            -- Kiểm tra xem liệu có tồn tại thông tin trong ReplicatedStorage không
                            local playerProfile = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Profile")
                            local goldValue = 0
                            if playerProfile and playerProfile:FindFirstChild("Currency") and playerProfile.Currency:FindFirstChild("Gold") then
                                goldValue = playerProfile.Currency.Gold.Value
                            end

                            local Embed = {
                                title = 'World//Zero',
                                color = 99999, -- Sửa lại màu là số nguyên
                                footer = { text = game.JobId },
                                author = {
                                    name = 'MAI HOÀNG PHI',
                                    url = 'https://www.roblox.com/',
                                },
                                fields = {
                                    {
                                        name = playerName,
                                        value = tostring(goldValue) -- Chuyển giá trị vàng thành chuỗi
                                    },
                                    {
                                        name = 'NGÀY VÀ GIỜ',
                                        value = os.date('%Y-%m-%d %H:%M:%S', OSTime) -- Ngày và giờ hiện tại
                                    }
                                },
                                timestamp = string.format('%d-%d-%dT%02d:%02d:%02dZ', Time.year, Time.month, Time.day, Time.hour, Time.min, Time.sec),
                            }

                            local function sendEmbed(embedContent)
                                (syn and syn.request or http_request) {
                                    Url = 'https://discord.com/api/webhooks/1249664506448187443/2me_mJp4i155tl1fayEFVaYIS-yzp9FNqQAGRyI1v4xe56MYdc8KDYBaA9Yw4Vevl3jw',
                                    Method = 'POST',
                                    Headers = {
                                        ['Content-Type'] = 'application/json'
                                    },
                                    Body = game:GetService('HttpService'):JSONEncode({
                                        content = Content,
                                        embeds = {embedContent}
                                    })
                                }
                            end

                            sendEmbed(Embed)
                        end

                        if H.PlayerGui.TowerFinish.TowerFinish.Description.Overlay.Text == 'Collect your rewards! (14)' then
                            S:SetLeaveChoice(H, true)
                            S:NotifyReadyToLeave(H)
                        end
                    end)
                    cj.Playerlist.Header:GetPropertyChangedSignal('Visible'):Connect(function()
                        wait(1)
                        aT(cj.Playerlist.WithParty.TextLabel)
                    end)
                end
            end
        end)
    end
})


bJ:Slider("WalkSpeed", 16, 120, K.WalkSpeed, function(bW)
    K.WalkSpeed = bW
end)

bK:DestroyUI()
bK:HideUI()
bL:MinimizeWindows()
z.Shared.Missions.MissionFinished.OnClientEvent:Connect(function()
    bG.Text = "EndTime: " .. os.date("%I:%M %p")
    -- WEBHOOK
    local OSTime = os.time()
    local Time = os.date('!*t', OSTime)
    local Avatar = 'https://cdn.discordapp.com/embed/avatars/4.png'
    local Content = 'Treo Acc World//Zero UGPHONE'

    -- Lấy tên nhân vật Roblox hiện tại
    local player = game.Players.LocalPlayer
    local playerName = player.Name

    -- Kiểm tra xem liệu có tồn tại thông tin trong ReplicatedStorage không
    local playerProfile = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Profile")
    local goldValue = 0
    if playerProfile and playerProfile:FindFirstChild("Currency") and playerProfile.Currency:FindFirstChild("Gold") then
        goldValue = playerProfile.Currency.Gold.Value
    end

    local Embed = {
        title = 'World//Zero',
        color = 99999, -- Sửa lại màu là số nguyên
        footer = {
            text = game.JobId
        },
        author = {
            name = 'MAI HOÀNG PHI',
            url = 'https://www.roblox.com/'
        },
        fields = {{
            name = playerName,
            value = tostring(goldValue) -- Chuyển giá trị vàng thành chuỗi
        }, {
            name = 'NGÀY VÀ GIỜ',
            value = os.date('%Y-%m-%d %H:%M:%S', OSTime) -- Ngày và giờ hiện tại
        }},
        timestamp = string.format('%d-%d-%dT%02d:%02d:%02dZ', Time.year, Time.month, Time.day, Time.hour, Time.min,
            Time.sec)
    }

    local function sendEmbed(embedContent)
        (syn and syn.request or http_request) {
            Url = 'https://discord.com/api/webhooks/1249664506448187443/2me_mJp4i155tl1fayEFVaYIS-yzp9FNqQAGRyI1v4xe56MYdc8KDYBaA9Yw4Vevl3jw',
            Method = 'POST',
            Headers = {
                ['Content-Type'] = 'application/json'
            },
            Body = game:GetService('HttpService'):JSONEncode({
                content = Content,
                embeds = {embedContent}
            })
        }
    end

    sendEmbed(Embed)
end)

for aA, B in pairs(Y) do
    if game.PlaceId == B then
        local cj = H.PlayerGui.MissionRewards.MissionRewards;
        local cs = z.Shared.VIP.IsExtraDrop:InvokeServer()
        cj.Countdown:GetPropertyChangedSignal('Text'):Connect(function()
            if cj.Countdown.Text == 'Pick up your gold! (1)' then
                repeat
                    wait()
                until cj.Chests.Visible and cj.Chests.Box1.Visible and cj.Chests.Box2.Visible and
                    cj.Chests.Box1.ChestImage.Select.Visible;
                repeat
                    aT(cj.Chests.Box1.ChestImage.Select)
                    aT(cj.Chests.Box1.ChestImage.Select)
                    wait()
                until cj.OpenChest.Countdown.text == '0'
                repeat
                    wait()
                until H.PlayerGui.LootReceived.LootReceived.Info.Skip.Close.ClassName == "ImageButton" and
                    H.PlayerGui.LootReceived.LootReceived.Info.Skip.Close.Visible
                repeat
                    aT(H.PlayerGui.LootReceived.LootReceived.Info.Skip.Sell)
                    wait()
                until H.PlayerGui.MissionRewards.MissionRewards.Chests.Next.Visible
                aT(H.PlayerGui.MissionRewards.MissionRewards.Chests.Next)
            end
        end)
        cj.OpenChest.Countdown:GetPropertyChangedSignal('Text'):Connect(function()
            if cj.OpenChest.Countdown.Text == '0' then
                repeat
                    wait()
                until cj.OpenChest:WaitForChild("Next") and cj.OpenChest:FindFirstChild("Next").Visible;
                aT(cj.OpenChest.Next.TextLabel)
            end
        end)
        cj.Chests.Box1.ChestImage.ChildAdded:Connect(function(ct)
            if ct.Name == 'ViewportFrame' and not cs then
                aT(cj.OpenChest.Next.TextLabel)
            else
                aT(cj.Chests.Box2.ChestImage.VIP.TextLabel)
                repeat
                    wait()
                until cj.OpenChest.Chest:FindFirstChild("RaidChest")
                wait(1)
                repeat
                    aT(cj.Chests.Box2.ChestImage.Select)
                    wait()
                until cj.OpenChest.Countdown.text == '0'
            end
        end)
        cj.Chests.Box2.ChestImage.ChildAdded:Connect(function(ct)
            if ct.Name == 'ViewportFrame' and cs then
                wait()
                aT(cj.OpenChest.Next.TextLabel)
            end
        end)
    end
end
if game.PlaceId == Y[2.1] then
    e.MissionObjects.ChildRemoved:Connect(function(cu)
        if cu.Name == 'MissionStart' then
            wait(1)
            e.MissionObjects.Room1Trigger.CFrame = J.CFrame
        end
    end)
    e.MissionObjects.Room1Trigger.ChildRemoved:Connect(function()
        wait(2)
        e.MissionObjects.Room2Trigger.CFrame = J.CFrame
    end)
    e.MissionObjects.Room2Trigger.ChildRemoved:Connect(function()
        wait(2)
        e.MissionObjects.Room3Trigger.CFrame = J.CFrame
    end)
    e.MissionObjects.Room3Trigger.ChildRemoved:Connect(function()
        wait(2)
        e.MissionObjects.Room4Trigger.CFrame = J.CFrame
    end)
    e.MissionObjects.Room4Trigger.ChildRemoved:Connect(function()
        wait(6)
        J.CFrame = e.MissionObjects.WallsTrigger.CFrame;
        wait(3)
        J.CFrame = e.MissionObjects.WallsFinalTrigger.CFrame
    end)
    H.PlayerGui.MissionObjective.MissionObjective.Label:GetPropertyChangedSignal('Text'):Connect(function()
        if H.PlayerGui.MissionObjective.MissionObjective.Label.Text == 'Take the royal crystal! (0 / 1)' then
            J.CFrame = CFrame.new(1192.15894, -226.738449, 110.141144)
        end
    end)
end
if game.PlaceId == Y[1.4] then
    e.ChildAdded:Connect(function(cv)
        if cv.Name == 'Cage1Marker' then
            wait(2)
            e.Cage1Marker.Collider.CFrame = J.CFrame
        end
    end)
    e.ChildAdded:Connect(function(cv)
        if cv.Name == 'Cage2Marker' then
            wait(2.2)
            e.Cage2Marker.Collider.CFrame = J.CFrame
        end
    end)
end
if game.PlaceId == Y[3.1] then
    e.MissionObjects.ChildRemoved:Connect(function(cw)
        if cw.Name == 'ProgressionBlocker1' then
            e.MissionObjects.CaveTrigger.CFrame = J.CFrame
        end
    end)
end
if game.PlaceId == Y[3] then
    e.ChildAdded:Connect(function(cx)
        if cx.Name == 'IceWall' then
            wait(5)
            AutoFarm.State = false;
            J.CFrame = e.IceWall:FindFirstChild('Ring').CFrame
        end
    end)
    e.ChildRemoved:Connect(function(cx)
        if cx.Name == 'IceWall' then
            aK()
            AutoFarm.State = true
        end
    end)
end
local function cy()
    pcall(function()
        for aA, B in pairs(e.MissionObjects.TowerLegs:GetDescendants()) do
            if B.Name == 'hitbox' and not B.CanCollide then
                B.Parent:Destroy()
            end
        end
    end)
end
if game.PlaceId == Y[4.1] then
    e.MissionObjects.TowerLegs.DescendantRemoving:Connect(cy)
end
if game.PlaceId == Y[6.1] then
    e.MissionObjects.ChildRemoved:Connect(function(cu)
        if cu.Name == 'MissionStart' then
            wait(1)
            e.MissionObjects.Area1Trigger.CFrame = J.CFrame
        end
    end)
    e.MissionObjects.Area2Trigger.ChildAdded:Connect(function(cz)
        if cz:IsA('TouchTransmitter') then
            wait(1)
            e.MissionObjects.Area2Trigger.CFrame = J.CFrame
        end
    end)
end
if game.PlaceId == Y[7.1] then
    e.MissionObjects.ChildRemoved:Connect(function(cu)
        if cu.Name == 'MissionStart' then
            wait(1)
            e.MissionObjects.FakeBoss.CFrame = J.CFrame
        end
    end)
end
if game.PlaceId == Z[1] then
    H.PlayerGui.MissionObjective.MissionObjective.Label:GetPropertyChangedSignal('Text'):Connect(function()
        if H.PlayerGui.MissionObjective.MissionObjective.Label.Text == 'Get behind the active shield! (2)' then
            AutoFarm.State = false;
            J.CFrame = e.MissionObjects.IgnisShield.Ring.CFrame;
            wait(3)
            aK()
            AutoFarm.State = true
        end
    end)
end
if game.PlaceId == 13988110964 or game.PlaceId == 14400549310 then
    H.PlayerGui.MissionObjective.MissionObjective.Label:GetPropertyChangedSignal('Text'):Connect(function()
        if H.PlayerGui.MissionObjective.MissionObjective.Label.Text == 'Advance to the next floor! (19)' then
            AutoFarm.State = false
            J.CFrame = e.LobbyTeleport.Interaction.CFrame
            wait(3)
            aK()
            AutoFarm.State = true
        end
    end)
end
local currentPlayer = game.Players.LocalPlayer
local playerCharacter = workspace.Characters:FindFirstChild(currentPlayer.Name)

if playerCharacter then
    local characterClass = playerCharacter.Properties:FindFirstChild("Class")
    if characterClass and table.find({'Swordmaster', 'Defender', 'DualWielder', 'Berserker', 'Guardian', 'Paladin', 'Dragoon', 'Demon', 'Warlord'}, characterClass.Value) then
        KillAura.State = false
    end
end


if game.PlaceId == 13988110964 or game.PlaceId == 14400549310 then
    H.PlayerGui.MissionObjective.MissionObjective.Label:GetPropertyChangedSignal('Text'):Connect(function()
        if H.PlayerGui.MissionObjective.MissionObjective.Label.Text == 'ENTER THE ARENA TO START!' then
            AutoFarm.State = false;
            J.CFrame = e.Boss_Gate.Interactions.Bounds.CFrame;
            wait(3)
            aK()
            AutoFarm.State = true
        end
    end)
end
for aA, B in pairs(Z) do
    if game.PlaceId == B then
        task.spawn(function()
            while IsAlive() do
                local cA = e.MissionObjects:WaitForChild('WaveStarter', math.huge)
                if #cA:GetChildren() > 0 then
                    cA.CFrame = J.CFrame
                end
                wait()
            end
        end)
        e.MissionObjects.ChildAdded:Connect(function(cB)
            if cB.Name == 'MinibossExitModel' then
                wait(2)
                e.MissionObjects.MinibossExitModel:MoveTo(J.Position)
            end
        end)
        e.MissionObjects.ChildAdded:Connect(function(cC)
            if cC.Name == 'MinibossExit' then
                wait(3)
                AutoFarm.State = false;
                e.MissionObjects.MinibossExit.CFrame = J.CFrame;
                wait()
                aK()
                AutoFarm.State = true
            end
        end)
    end
end
for aA, B in ipairs(game:GetService("ReplicatedStorage").Shared.Effects.EffectScripts:GetChildren()) do
    if hookfunction and B:IsA("ModuleScript") and
        (string.find(B.Name, "Klaus") or string.find(B.Name, "Hades") or string.find(B.Name, "Prism") or
            string.find(B.Name, "Taurha") or string.find(B.Name, "Kraken") or string.find(B.Name, "Anubis") or
            string.find(B.Name, "Cerberus") or string.find(B.Name, "FallenKing")) then
        local cD = require(B)
        hookfunction(cD, function()
            return nil
        end)
    end
end
for A, B in pairs(Y) do
    if type(A) ~= "string" and game.PlaceId == B then
        if e:FindFirstChild('MissionObjects') then
            local cE = e.MissionObjects;
            cE.DescendantAdded:Connect(function(cz)
                if cz:IsA 'TouchTransmitter' and not string.match(cz.Parent.Parent.Name, 'Damage') and
                    not string.match(cz.Parent.Name, 'Killpart') and not string.match(cz.Parent.Name, '0') and
                    not string.match(cz.Parent.Parent.Name, 'Darts') and
                    not string.match(cz.Parent.Parent.Name, 'Spikes') and cz.Parent ~= 'MinibossExit' and
                    cz.Parent.Parent ~= 'MinibossExitModel' then
                    wait(2)
                    pcall(function()
                        cz.Parent.CFrame = J.CFrame
                    end)
                end
            end)
            cE.DescendantAdded:Connect(function(cF)
                if cF:IsA 'TouchTransmitter' and string.match(cF.Parent.Name, 'Trigger') then
                    wait(3 / 2)
                    pcall(function()
                        cF.Parent.CFrame = J.CFrame
                    end)
                end
            end)
        end
    end
end
for aA, cG in pairs(Z) do
    if game.PlaceId == cG then
        e.ChildAdded:Connect(function(cH)
            if cH.Name == 'RaidChestGold' then
                e.RaidChestGold.ChestBase.CFrame = J.CFrame;
                wait(3.8)
                
                repeat
                wait()
                until cj.OpenChest:WaitForChild("Next") and cj.OpenChest:FindFirstChild("Next").Visible;
                aT(cj.OpenChest.Next.TextLabel)
            end
        end)
        e.ChildAdded:Connect(function(cI)
            if cI.Name == 'RaidChestSilver' then
                e.RaidChestSilver.ChestBase.CFrame = J.CFrame;
                wait(3.8)
                
                repeat
                wait()
                until cj.OpenChest:WaitForChild("Next") and cj.OpenChest:FindFirstChild("Next").Visible;
                aT(cj.OpenChest.Next.TextLabel)
            end
        end)
        e.ChildAdded:Connect(function(cJ)
            if cJ.Name == 'AtlanticChest' then
                for aA, B in pairs(e:GetChildren()) do
                    if B.ClassName == 'Model' and B.Name == 'AtlanticChest' then
                        B.ChestBase.CFrame = J.CFrame
                    end
                end
            end
        end)
        e.ChildAdded:Connect(function(cK)
            if cK.Name == 'VolcanicChestTower' then
                for aA, B in pairs(e:GetChildren()) do
                    if B.ClassName == 'Model' and B.Name == 'VolcanicChestTower' then
                        B.ChestBase.CFrame = J.CFrame
                    end
                end
            end
        end)
        e.ChildRemoved:Connect(function(cH)
            if cH.Name == 'RaidChestGold' and e:FindFirstChild 'RaidChestGold' then
                e.RaidChestGold.ChestBase.CFrame = J.CFrame
                repeat
                wait()
                until cj.OpenChest:WaitForChild("Next") and cj.OpenChest:FindFirstChild("Next").Visible;
                aT(cj.OpenChest.Next.TextLabel)
            end
        end)
        e.ChildRemoved:Connect(function(cI)
            if cI.Name == 'RaidChestSilver' and e:FindFirstChild 'RaidChestSilver' then
                e.RaidChestSilver.ChestBase.CFrame = J.CFrame
                repeat
                wait()
                until cj.OpenChest:WaitForChild("Next") and cj.OpenChest:FindFirstChild("Next").Visible;
                aT(cj.OpenChest.Next.TextLabel)
            end
        end)
        e.ChildRemoved:Connect(function(cJ)
            if cJ.Name == 'AtlanticChest' then
                for aA, B in pairs(e:GetChildren()) do
                    if B.ClassName == 'Model' and B.Name == 'AtlanticChest' and e:FindFirstChild 'AtlanticChest' then
                        B.ChestBase.CFrame = J.CFrame
                    end
                end
            end
        end)
        e.ChildRemoved:Connect(function(cK)
            if cK.Name == 'VolcanicChestTower' then
                for aA, B in pairs(e:GetChildren()) do
                    if B.ClassName == 'Model' and B.Name == 'VolcanicChestTower' and
                        e:FindFirstChild 'VolcanicChestTower' then
                        B.ChestBase.CFrame = J.CFrame
                    end
                end
            end
        end)
    end
end
for aA, B in pairs(Z) do
    if game.PlaceId == B then
        c.PurchasePrompt.ProductPurchaseContainer.Animator.ChildAdded:Connect(function()
            pcall(function()
                c.PurchasePrompt.ProductPurchaseContainer.Animator.Prompt.Visible = false
            end)
        end)
        c.PurchasePrompt.ChildAdded:Connect(function(cL)
            if cL.Name == 'RobuxUpsellContainer' then
                wait(1 / 3)
                cL:Destroy()
            end
        end)
    end
end
for aA, B in pairs(_) do
    if game.PlaceId == B then
        KillAura.State = false;
        AutoFarm.State = false
    end
end
local function cM(cN)
    character = cN;
    K = cN:WaitForChild('Humanoid')
    J = cN:WaitForChild('HumanoidRootPart')
    aK()
end
H.CharacterAdded:Connect(cM)
if getconnections then
    for aA, B in next, getconnections(H.Idled) do
        B:Disable()
    end
end
if not getconnections then
    H.Idled:connect(function()
        a.VirtualUser:ClickButton2(Vector2.new())
    end)
end
H.CameraMaxZoomDistance = 60;
local cO = H.CameraMinZoomDistance;
H.CameraMinZoomDistance = 60;
H.CameraMinZoomDistance = cO;
game.NetworkClient.ChildRemoved:Connect(function(cP)
    al.KillAura = false;
    bJ.Text = "Disconnected"
end)
coroutine.wrap(function()
    local cQ = c:WaitForChild("RobloxPromptGui")
    local cR = cQ:WaitForChild("promptOverlay")
    local cS = cR:WaitForChild("ErrorPrompt")
    local cT = cS:WaitForChild("MessageArea")
    local cU = cT:WaitForChild("ErrorFrame")
    local cV = cU:WaitForChild("ErrorMessage")
    repeat
        wait()
    until string.find(cV.Text, "exploit")
    if ap.DifficultyID <= 1 then
        z.Shared.Teleport.StartRaid:FireServer(ap.DungeonID)
    else
        z.Shared.Teleport.StartRaid:FireServer(ap.DungeonID, ap.DifficultyID)
    end
end)()
coroutine.wrap(function()
    local cQ = c:WaitForChild("RobloxPromptGui")
    local cR = cQ:WaitForChild("promptOverlay")
    local cS = cR:WaitForChild("ErrorPrompt")
    local cT = cS:WaitForChild("MessageArea")
    local cU = cT:WaitForChild("ErrorFrame")
    local cV = cU:WaitForChild("ErrorMessage")
    repeat
        wait()
    until string.find(cV.Text, "reconnect")
    if ap.DifficultyID <= 1 then
        z.Shared.Teleport.StartRaid:FireServer(ap.DungeonID)
    else
        z.Shared.Teleport.StartRaid:FireServer(ap.DungeonID, ap.DifficultyID)
    end
end)()
local cW = {
    DungeonID = a0[game.PlaceId],
    DifficultyID = S.GetDifficulty(),
    Phase = 0,
    ProfileGUID = k.Profile[H.Name].GUID.Value
}
if getgenv().RJOnCrash and not a0[game.PlaceId] or cW.Phase == 1 then
    ag('WZ_CrashRJ', cW)
    wait(1)
    if cW.Phase == 0 then
        cW.Phase = 1;
        ak('WZ_CrashRJ', cW)
        an(ao)
        while wait(10) do
            z.Shared.Teleport.JoinGame:FireServer(cW.ProfileGUID)
        end
    end
    if cW.Phase == 1 then
        cW.Phase = 0;
        ak('WZ_CrashRJ', cW)
        an(ao)
        if ap.DifficultyID <= 1 then
            z.Shared.Teleport.StartRaid:FireServer(cW.DungeonID)
        else
            z.Shared.Teleport.StartRaid:FireServer(cW.DungeonID, cW.DifficultyID)
        end
    end
end
ak('WZ_CrashRJ', cW)
local cX = function(cY, cZ)
    local c_ = {
        enabled = true,
        fake = cY[cZ],
        fake_type = typeof(fake)
    }
    local d0;
    local d1;
    function c_:SetFake(d2, d3)
        if d3 then
            c_.fake = d2
        elseif typeof(d2) == c_.fake_type then
            c_.fake = d2
        else
            c_.fake = nil
        end
    end
    function c_:Destroy()
        cY[cZ] = c_.fake;
        c_.enabled = false
    end
    if hookmetamethod then
        d0 = hookmetamethod(cY, '__index', function(self, d4)
            if self == cY and d4 == cZ and not checkcaller() and c_.enabled then
                return c_.fake
            end
            return d0(self, d4)
        end)
        d1 = hookmetamethod(cY, '__newindex', function(self, d4, d5)
            if self == cY and d4 == cZ and not checkcaller() and c_.enabled then
                if typeof(d5) == c_.fake_type then
                    c_.fake = d5;
                    return
                else
                    c_.fake = nil;
                    return
                end
            end
            return d1(self, d4, d5)
        end)
    else
        return
    end
    return c_
end;
cX(K, 'WalkSpeed')
cX(H, 'CameraMaxZoomDistance')
if ad ~= 'MageOfLight' then
    MoLPass.State = false
end
local d6 = {}
local d7 = ''
local d8 = true;
if am.PerkNames ~= nil and type(am.PerkNames) == 'table' then
    for A, B in pairs(am.PerkNames) do
        d8 = false
    end
end
if d8 then
    am.PerkNames = {}
    for A, B in pairs(T) do
        if type(B) == 'table' then
            for C, d9 in pairs(B) do
                if type(d9) == 'table' then
                    for da, db in pairs(d9) do
                        if da == 2 then
                            table.insert(am.PerkNames, A)
                            d6[A] = db
                        end
                    end
                end
            end
        end
    end
else
    ag('WZwebhook', am)
end
local dc = {}
local dd = {
    ['ResistFrost'] = 'Resist Frost',
    ['ResistBurn'] = 'Resist Burn',
    ['Glass'] = 'Glass',
    ['RoughSkin'] = 'Rough Skin',
    ['ResistKnockdown'] = 'Resist Knockdown',
    ['BonusWalkspeed'] = 'Agility',
    ['PetFoodDrop'] = 'Lucky Looter',
    ['BonusAttack'] = 'Attack UP',
    ['BonusHP'] = 'HP UP',
    ['ResistPoison'] = 'Resist Poison',
    ['LifeDrain'] = 'Life Drain',
    ['CritStack'] = 'Crit Stack',
    ['BurnChance'] = 'Burn Chance',
    ['OpeningStrike'] = 'Opening Strike',
    ['MobBoss'] = 'Mob Boss',
    ['TestTier5'] = 'Boss of the Boss',
    ['GoldDrop'] = 'Gold Hoarder',
    ['BonusRegen'] = 'Bonus Health Regen',
    ['DamageReduction'] = 'Damage Reduction',
    ['Aggro'] = 'Shifted Aggro',
    ['UltCharge'] = 'Energized',
    ['Fortress'] = 'Fortress',
    ['MasterThief'] = 'Master Thief',
    ['EliteBoss'] = 'Elite Boss',
    ['DodgeChance'] = 'Untouchable'
}
H.CharacterRemoving:Connect(function()
    dg:Disconnect()
end)
local ds = H:WaitForChild("PlayerGui")
local cj = ds:WaitForChild("MissionRewards"):WaitForChild("MissionRewards")
local dt = ds:WaitForChild("TowerFinish"):WaitForChild("TowerFinish")
local du = cj:WaitForChild("Time")
local dv = dt:WaitForChild("Description"):WaitForChild("Overlay")
repeat
    wait()
until du.Visible or dv.text == "Collect your rewards! (20)"
wait(1)
local dw = z.Profile[H.Name].Currency.Gold.Value - de;
local dx = ""
local dy = ""
if not du.Visible then
    dx = "Tower Finished"
    dy = dt:WaitForChild("Time").Text
else
    dx = cj:WaitForChild("RaidClear").Text;
    dy = cj:WaitForChild("Time").Text
end
local dz = ''
local dA = ''
for A, B in pairs(V) do
    if B.LiveID == game.PlaceId then
        dz = B.Name;
        dA = B.NameTag
    end
end
